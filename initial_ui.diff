*** Begin Patch
*** Update File: specs/001-multi-tenant-ecommerce/spec.md
@@ ### Internationalization (Phase 1 Scope)
 **Date/Time Format**: ISO 8601 in API; localized display in UI (YYYY-MM-DD for en-US, DD/MM/YYYY for en-GB based on user locale).
+
+### Design System & UI/UX Principles
+
+In addition to the functional and technical assumptions above, StormCom adopts a comprehensive UI/UX design system to ensure a cohesive and polished experience across the admin dashboard and storefront.  The system defines design tokens, theming, typography, layout grids and accessibility guidelines that apply to all user‑facing flows in this specification:
+
+- **Design tokens**: Colours and typography are expressed as CSS variables (`--color-bg`, `--color-fg`, `--color-primary`, `--color-secondary`, `--font-sans`, etc.), enabling per‑tenant theming and light/dark modes.  Tokens guarantee minimum contrast ratios and can be overridden safely without breaking accessibility:contentReference[oaicite:0]{index=0}.
+- **Typography & iconography**: Interfaces use a clear sans‑serif font (e.g. Inter) with hierarchical headings and tabular numerals for data display.  Icons sourced from a consistent set (Radix Icons/lucide) accompany text; icon‑only controls include accessible labels or tooltips:contentReference[oaicite:1]{index=1}.
+- **Layout & grid**: A responsive 12‑column grid with a 4‑point spacing scale guides page layouts.  Breakpoints at 640 px (sm), 768 px (md), 1024 px (lg), 1280 px (xl) and 1536 px (2xl) ensure the UI adapts gracefully from mobile to desktop:contentReference[oaicite:2]{index=2}.
+- **Elevation & feedback**: Cards, modals and drop‑downs use subtle borders and layered shadows to convey depth.  Interactive elements provide hover, active and focus states; micro‑interactions are subtle and respect the user’s `prefers‑reduced‑motion` setting:contentReference[oaicite:3]{index=3}.
+- **Accessibility**: Native semantic HTML elements are preferred; all controls are keyboard navigable, provide visible focus indicators and include appropriate ARIA labels.  Colour is never the sole indicator of meaning – text or icons accompany colour cues:contentReference[oaicite:4]{index=4}.
+
+These design principles complement the specification’s functional requirements and must be followed when implementing UI features.
*** End Patch

*** Begin Patch
*** Update File: specs/001-multi-tenant-ecommerce/plan.md
@@
 ### Project Structure
@@
   └── tasks.md             # Phase 2 output (/speckit.tasks command - NOT created by /speckit.plan)
+
+## Design & UI Implementation Plan
+
+StormCom will adopt a formal design system to guide UI development across the admin dashboard and storefront.  The following steps outline how the design system will be implemented:
+
+- **Establish design tokens:** Define CSS variables for colours, typography, spacing, radii and elevations.  These tokens will live in `src/app/globals.css` and the Tailwind `theme.extend` configuration to enable per‑tenant theming and light/dark modes:contentReference[oaicite:5]{index=5}.
+- **Typography & iconography:** Use a clean sans‑serif font (e.g. Inter) with hierarchical heading sizes and tabular numerals.  Icons are sourced from Radix Icons or lucide-react and paired with text to improve clarity:contentReference[oaicite:6]{index=6}.
+- **Responsive grid:** Implement a 12‑column grid using Tailwind’s container settings and a 4px baseline.  Breakpoints at sm (640px), md (768px), lg (1024px), xl (1280px) and 2xl (1536px) ensure the UI adapts gracefully on all devices:contentReference[oaicite:7]{index=7}.
+- **Component library:** Copy and adapt shadcn/ui components built on Radix UI primitives (Button, Input, Select, Modal, Toast, Tooltip, Tabs, Accordion, Card, Table, etc.) into the codebase.  Extend them with variants and theming to match StormCom branding and accessibility standards:contentReference[oaicite:8]{index=8}.
+- **Dark mode & theming:** Provide a theme toggle and support customizing primary and secondary colours per tenant.  Persist `primaryColor`, `secondaryColor` and `fontFamily` in the `Store` model to store branding preferences.
+- **Storybook:** Configure Storybook with Next.js integration to document components, design guidelines and accessibility behaviours.  Include addons for responsiveness, accessibility and visual regression.
+- **Accessibility & micro‑interactions:** Ensure all components meet WCAG 2.1 AA guidelines; implement visible focus states, keyboard navigation and `prefers‑reduced‑motion` fallbacks.  Use subtle animations for interactive feedback but avoid large blocking motions:contentReference[oaicite:9]{index=9}.
+
+The tasks required to implement this design system are enumerated in `tasks.md` under Phase 2 (Design System).
*** End Patch

*** Begin Patch
*** Update File: specs/001-multi-tenant-ecommerce/tasks.md
@@
- [x] T009b Configure responsive breakpoints and container queries at tailwind.config.ts
+    - [x] T009b Configure responsive breakpoints and container queries at tailwind.config.ts
+    # Design System tasks (UI & UX)
+    - [ ] T009c [DS] Define design tokens and global CSS variables (colours, typography, spacing, radii, elevation) in `src/app/globals.css` and update `tailwind.config.ts` to expose these tokens:contentReference[oaicite:10]{index=10}.
+    - [ ] T009d [DS] Implement a typography scale and utilities (heading sizes, font weights, tabular numerals) in the Tailwind configuration and reusable components:contentReference[oaicite:11]{index=11}.
+    - [ ] T009e [DS] Implement elevation/shadow and radius utilities and establish a z‑index map for layers (header, drawer, modal, toast, tooltip).
+    - [ ] T009f [DS] Build core UI components using shadcn/ui and Radix UI primitives (Button, Input, Select, Textarea, Checkbox, Radio, Switch, Modal, Drawer, Tooltip, Tabs, Accordion, Card, Table, Toast, Skeleton) and provide variants (primary, secondary, destructive, etc.) with accessible states.
+    - [ ] T009g [DS] Add motion utilities and `prefers‑reduced‑motion` fallbacks; implement micro‑interaction animations using Framer Motion where appropriate.
+    - [ ] T009h [DS] Implement form patterns with inline validation, real‑time feedback and accessible error states using React Hook Form and Zod; ensure inputs are properly labelled and include helper/error text.
+    - [ ] T009i [DS] Implement skeleton and empty state components with appropriate copy and icons to guide users when data is loading or absent.
+    - [ ] T009j [DS] Develop email templates using React Email that follow the design system (typography, colours, spacing) for transactional emails (order confirmation, payment received, order shipped, etc.).
+    - [ ] T009k [DS] Create a chart theme and KPI tile components using Recharts (or equivalent) with accessible colour palettes and semantic indicators.
+    - [ ] T009l [DS] Configure Storybook with a custom StormCom design system theme (light/dark) and include addons for accessibility and responsiveness; write stories for all core components.
*** End Patch

*** Begin Patch
*** Update File: specs/001-multi-tenant-ecommerce/data-model.md
@@ model Store {
   faviconUrl   String?
   primaryColor String @default("#000000")
+  secondaryColor String @default("#4F46E5")
+  fontFamily  String @default("Inter")
@@ model Store {
   // Contact and legal
   email        String
@@
   // Onboarding and configuration
   onboardingCompleted Boolean @default(false) // Track first-time setup completion (CHK054)
   allowCouponsWithFlashSale Boolean @default(true) // Allow coupon stacking during flash sales (CHK060)
@@
   integrations   ExternalPlatformIntegration[]
@@
   @@index([slug])
   @@index([status])
 }
*** End Patch

*** Begin Patch
*** Update File: specs/001-multi-tenant-ecommerce/data-model.md
@@ model User {
   // MFA settings
   mfaEnabled    Boolean  @default(false)
   mfaSecret     String?  // TOTP secret (encrypted)
-  mfaBackupCodes String? // Comma-separated (encrypted)
+  // Removed mfaBackupCodes: backup codes are not supported; TOTP only
*** End Patch

*** Begin Patch
*** Update File: specs/001-multi-tenant-ecommerce/data-model.md
@@ enum UserStatus {
   SUSPENDED
 }
+
+### 41. DSARRequest
+
+Data Subject Access Request / Erasure workflow records.
+
+```prisma
+model DSARRequest {
+  id          String   @id @default(cuid())
+  createdAt   DateTime @default(now())
+  updatedAt   DateTime @updatedAt
+
+  storeId     String
+  store       Store    @relation(fields: [storeId], references: [id], onDelete: Cascade)
+
+  userId      String?
+  user        User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
+
+  type        DSARType
+  status      DSARStatus @default(PENDING)
+
+  requestedByEmail String
+  processedAt DateTime?
+  notes       String?
+
+  @@index([storeId])
+  @@index([type, status])
+}
+
+enum DSARType {
+  ACCESS
+  ERASURE
+  PORTABILITY
+}
+
+enum DSARStatus {
+  PENDING
+  IN_PROGRESS
+  COMPLETED
+  REJECTED
+}
+```
*** End Patch
