*** Begin Patch
*** Update File: specs/001-multi-tenant-ecommerce/spec.md
@@ ### Session 2025-10-17
- Q: Which MFA method(s) should be supported? → A: Adopt the recommended stack: TOTP authenticator apps (RFC 6238) as the primary method with one‑time recovery codes; optional SMS fallback (opt‑in per tenant); optional WebAuthn/FIDO2 security keys for enterprises.
+ Q: Which MFA method(s) should be supported? → A: TOTP authenticator apps (RFC 6238) as the sole method in Phase 1 (no backup codes). Optional WebAuthn/FIDO2 keys may be added in future phases; SMS fallback is not in scope.
@@ ### Session 2025-10-20
- Q: How should MFA backup codes be stored to balance security and usability? → A: No backup codes - users must use authenticator app only (TOTP required for MFA-enabled accounts).
- Q: Should Super Admins be required to use MFA, or should it be optional like other user types? → A: Optional MFA for Super Admins (same as other users) - maintains consistency but may reduce security for privileged accounts.
+ Q: How should MFA backup codes be stored to balance security and usability? → A: No backup codes will be issued or stored; users must rely solely on a TOTP authenticator app.
+ Q: Should Super Admins be required to use MFA, or should it be optional like other user types? → A: MFA is **required** for Admins and Super Admins; optional for other user types.
@@ ### Security & Compliance Assumptions
- **Session Management**: JWT tokens with 30-day absolute expiration, 7-day idle timeout (sliding window); stored in HTTP-only, Secure, SameSite=Lax cookies. **Session storage**: Vercel KV (Redis-compatible) in production for <10ms validation and immediate invalidation; in-memory Map in local development (no Redis setup required). Session ID embedded in JWT; validated on every API request.
- **HTTPS**: TLS 1.3 enforced via Vercel; HSTS headers with max-age=31536000 (1 year); automatic certificate renewal via Let's Encrypt.
+ **Session Management**: 30-minute idle timeout and 12-hour absolute expiration; sessions rotate on privilege change; stored in HttpOnly, Secure, SameSite=Lax cookies. **Session storage**: Vercel KV (Redis-compatible) in production for <10 ms validation and immediate invalidation; in-memory Map fallback for local development. Session IDs are embedded in JWTs and validated on every request.
+ **Transport Security (HTTPS)**: TLS 1.3 only. Enforce HSTS headers with `max-age=63072000; includeSubDomains; preload` and automatic certificate renewal via Let's Encrypt.
+ **CSRF Protection**: All state-changing requests MUST include a CSRF token bound to the user session. Idempotent GET/HEAD requests are exempt. CSRF tokens are delivered via secure cookies and validated on POST/PUT/PATCH/DELETE.
+ **Security Headers**: Set strict security headers on all responses: Content-Security-Policy (nonce-based with `frame-ancestors 'none'` for the dashboard), X-Content-Type-Options `nosniff`, Referrer-Policy `strict-origin-when-cross-origin`, and, for legacy clients, X-Frame-Options `DENY`. Configure a 2‑year HSTS policy as described above.
@@ ### Browser Support & Compatibility
@@
-    - **JavaScript**: ES2020+ features; no IE11 support; polyfills only for 
- Safari 14 (Promise.allSettled, String.replaceAll).
+    - **JavaScript**: ES2020+ features; no IE11 support; polyfills only for Safari 14 (Promise.allSettled, String.replaceAll).
+
+### Design & Styling Standards
+StormCom’s UI follows a unified design system across the admin dashboard and customer storefront. These guidelines ensure consistency, accessibility, and maintainability.
+
+**Design System Overview**
+ - Use **Tailwind CSS 4.1.14+** with custom configuration and **shadcn/ui** (built on top of Radix UI) as the primary component library. Avoid writing custom CSS except for design tokens.
+ - Define reusable design tokens for colors, typography, spacing, and border radius. Store tokens in `tailwind.config.ts` and document them in `docs/design-system.md`.
+
+**Color Palette**
+ - Define a core palette with roles: **primary**, **secondary**, **neutral**, **success**, **warning**, and **danger**. Default values:  
+   - `primary`: `#0f766e` (teal)  
+   - `secondary`: `#7c3aed` (purple)  
+   - `neutral`: `#64748b` (slate)  
+   - `success`: `#16a34a` (green)  
+   - `warning`: `#ca8a04` (amber)  
+   - `danger`: `#dc2626` (red)  
+   Ensure all text/background combinations meet WCAG 2.1 AA contrast (≥ 4.5:1).  
+ - Each store may override the primary color via the `primaryColor` field (and optional `secondaryColor`) in the `Store` model. Use CSS variables to apply dynamic theming based on store configuration.
+
+**Typography**
+ - Use **Inter**, `sans-serif` as the default font family. Provide fallbacks (`ui-sans-serif, system-ui`).  
+ - Heading hierarchy: `h1` → `text-3xl font-semibold`, `h2` → `text-2xl font-semibold`, `h3` → `text-xl font-medium`.  
+ - Body text: `text-base leading-relaxed`.  
+ - Use `text-sm` for form labels, helper text, and table captions.  
+ - Avoid excessive letter-spacing; rely on Tailwind’s tracking utilities (e.g., `tracking-tight`).
+
+**Spacing & Layout**
+ - Use a base unit of **4 px** (Tailwind’s `0.5` spacing) and multiples thereof. Standard gaps: `4`, `6`, `8`, `12`, `16`.  
+ - Pages use a max width of `1280px` (`max-w-screen-xl`) and center content.  
+ - Employ the **12‑column CSS grid** for complex layouts; otherwise, use Flexbox for simple row/column arrangements.  
+ - Standard border radius: `rounded-lg` for cards, `rounded-md` for buttons/inputs.
+
+**Components & Patterns**
+ - Compose UI using **shadcn/ui** primitives: `Button`, `Input`, `Label`, `Card`, `Dialog`, `Tabs`, `Accordion`, `Table`. Extend only via Tailwind classes or variant props; never modify underlying Radix styles directly.  
+ - All custom components must support dark mode via CSS variables and the `data-theme` attribute.  
+ - Provide global layout wrappers (`DashboardShell`, `StorefrontLayout`) with consistent padding, page titles, and breadcrumbs.
+
+**Dark Mode**
+ - Implement dark mode using CSS variables toggled by a `theme-toggle` component. Store the user’s preference in `localStorage`.  
+ - Define dark variants of all palette colors (e.g., `primary-dark`, `neutral-dark`) ensuring contrast requirements.
+
+**Icons & Imagery**
+ - Use **lucide-react** icons for vector icons; maintain consistent stroke width (`1.5 px`).  
+ - Provide descriptive `aria-label` or `title` attributes for icons used without text.  
+ - Optimize images via Next.js `<Image>` component with responsive `sizes` and `priority` flags. All images must include `alt` text.
+
+**Motion & Interaction**
+ - Use **Framer Motion** for enter/exit transitions and interactive feedback (e.g., modal slide-in, dropdown fade).  
+ - Respect user motion preferences (`prefers-reduced-motion`); disable animations when necessary.  
+ - Provide visual feedback on hover, focus, active, and disabled states with subtle transitions (e.g., `transition-colors`, `duration-150`).
+
+**Documentation**
+ - Document all tokens, components, and layout patterns in `docs/design-system.md` with usage guidelines and examples.  
+ - Provide Figma or comparable design source files for designers and developers to reference; include links in the design docs.  
+
+These guidelines supersede any ambiguous terminology (e.g., "centered card layout") and serve as the baseline for all UI/UX decisions.
+
*** Update File: specs/001-multi-tenant-ecommerce/plan.md
@@
-**Authentication**: NextAuth.js v5 with JWT sessions, bcrypt password hashing, TOTP MFA (authenticator app only, no backup codes), OIDC/SAML SSO. Role/Permission system uses predefined roles (SUPER_ADMIN, STORE_ADMIN, STAFF, CUSTOMER) with fixed permissions (no custom roles in Phase 1). MFA is optional for all users, including Super Admins, for consistency.
+**Authentication**: NextAuth.js v5 with JWT sessions, bcrypt password hashing, TOTP MFA (authenticator app only; no backup codes), OIDC/SAML SSO. Role/Permission system uses predefined roles (SUPER_ADMIN, STORE_ADMIN, STAFF, CUSTOMER) with fixed permissions (no custom roles in Phase 1). **MFA is required for Admin and Super Admin**, optional for other roles.
@@
-**Session Management**: JWT + server-side session store. Session ID is embedded in JWT and validated on every request. Session storage uses Vercel KV (Redis-compatible) in production for <10ms lookups and immediate invalidation; in-memory Map fallback for local development (no Redis dependency). JWT tokens have 30-day absolute expiration, 7-day idle timeout (sliding window), stored in HTTP-only, Secure, SameSite=Lax cookies.
+**Session Management**: Sessions have a 30-minute idle timeout and a 12-hour absolute expiration. Session IDs are embedded in JWTs and validated on every request. Session storage uses Vercel KV (Redis-compatible) in production for <10 ms lookups and immediate invalidation; in-memory Map fallback for local development (no Redis dependency). Sessions rotate on privilege change and are stored in HttpOnly, Secure, SameSite=Lax cookies. **State-changing requests** require a valid CSRF token (see CSRF Protection).
@@
-| **Security** | ✅ PASS | NextAuth v5, bcrypt (cost 12), TOTP MFA (authenticator app only, no backup codes), OIDC/SAML SSO, RBAC with predefined roles, input validation (Zod), XSS prevention, HTTPS only. MFA is optional for all users, including Super Admins. |
+| **Security** | ✅ PASS | NextAuth v5, bcrypt (cost 12), TOTP MFA (authenticator app only; no backup codes), OIDC/SAML SSO, RBAC with predefined roles, input validation (Zod), XSS prevention, HTTPS only. **MFA is required for Admin and Super Admin, optional for other users.** |
@@
   **Session Management**: Sessions have a 30-minute idle timeout and a 12-hour absolute expiration. Session IDs are embedded in JWTs and validated on every request. Session storage uses Vercel KV (Redis-compatible) in production for <10 ms lookups and immediate invalidation; in-memory Map fallback for local development (no Redis dependency). Sessions rotate on privilege change and are stored in HttpOnly, Secure, SameSite=Lax cookies. **State-changing requests** require a valid CSRF token (see CSRF Protection).
+
+### CSRF Protection (NEW)
+All state‑changing requests from browsers require a double‑submit anti‑CSRF token and SameSite=Lax cookies. Exempt idempotent GET/HEAD; enforce the token on POST/PUT/PATCH/DELETE. Provide the CSRF token via secure cookie and meta tag; include a nonce binding for forms.
+
+### Security Headers (NEW)
+Set the following headers at the edge (middleware):
+- Strict‑Transport‑Security: `max‑age=63072000; includeSubDomains; preload`
+- Content‑Security‑Policy: a nonce‑based strict CSP with `frame‑ancestors 'none'` for the dashboard
+- X‑Content‑Type‑Options: `nosniff`
+- Referrer‑Policy: `strict‑origin‑when‑cross‑origin`
+- (Legacy) X‑Frame‑Options: `DENY`
+
+### Incident Response & IP Reputation (NEW)
+Implement anomaly detection and IP reputation checks on authentication‑critical routes. Create an on‑call runbook with triage procedures, communication templates, evidence preservation, and post‑mortem steps.
+
+### Backups & Restore Drills (NEW)
+Nightly database snapshots (retain 30 days) and weekly restore drills. Weekly object storage backup verification. Recovery Point Objective (RPO): 24 hours; Recovery Time Objective (RTO): 4 hours for production.
@@ **UI Requirements:**
@@
-      - Dependencies: Next.js App Router, shadcn/ui, Tailwind CSS, and wireframes are required for implementation and review.
+      - Dependencies: Next.js App Router, shadcn/ui, Tailwind CSS, and wireframes are required for implementation and review.
+      - **Design System & Styling Standards**: Implement and adhere to the unified design system defined in `spec.md`. Define a core color palette (primary, secondary, neutral, success, warning, danger) with WCAG‑compliant contrast, choose a default font family (Inter) and hierarchy, establish spacing and layout rules (4 px/8 px base units, consistent border radius), and compose UI using shadcn/ui and Tailwind classes. Provide dark mode support, dynamic theming per store, standardized icons via lucide‑react, motion guidelines via Framer Motion, and document tokens and components in `docs/design-system.md` and accompanying design files.
+
*** Update File: specs/001-multi-tenant-ecommerce/tasks.md
@@
-    - [x] T009b Configure responsive breakpoints and container queries at tailwind.config.ts
+    - [x] T009b Configure responsive breakpoints and container queries at tailwind.config.ts
+    - [ ] T009c [DESIGN] Define global design tokens (color palette, typography, spacing, border radius) in `tailwind.config.ts`, create design system documentation at `docs/design-system.md`, and verify WCAG 2.1 AA contrast for all color combinations.
+    - [ ] T009d [DESIGN] Implement base layout and UI kit components (DashboardShell, StorefrontLayout, Card, Button, Input, PageHeader, Badge) using shadcn/ui and Tailwind classes, adhering to the design tokens.
+    - [ ] T009e [DESIGN] Add dynamic theming support based on `Store.primaryColor` and `Store.secondaryColor` using CSS variables; update the theme toggle to support light/dark mode tokens; implement tests to verify theme switching.
+    - [ ] T009f [DESIGN] Provide comprehensive design documentation, including Figma files or equivalent design sources, usage guidelines, and examples for all components and tokens in `docs/design-system.md`.
+
*** Update File: specs/001-multi-tenant-ecommerce/data-model.md
@@ model User {
   mfaEnabled    Boolean  @default(false)
   mfaSecret     String?  // TOTP secret (encrypted)
-  mfaBackupCodes String? // Comma-separated (encrypted)
+  // Removed mfaBackupCodes; no backup codes are stored.
@@ model Store {
       logoUrl      String?
       faviconUrl   String?
       primaryColor String @default("#000000")
+      secondaryColor String @default("#FFFFFF")
+      fontFamily    String?  // Optional custom font family override
@@
 ### 41. DSARRequest
@@
   type        DSARType
   status      DSARStatus @default(PENDING)
   requestedByEmail String
   processedAt DateTime?
   notes       String?
 
   @@index([storeId])
   @@index([type, status])
 }
 
 enum DSARType { ACCESS; ERASURE; PORTABILITY }
 enum DSARStatus { PENDING; IN_PROGRESS; COMPLETED; REJECTED }
*** End Patch
