{
    "summary":  {
                    "totalErrors":  118,
                    "exitCode":  2,
                    "timestamp":  "2025-11-01T21:42:25Z",
                    "command":  "npm run type-check",
                    "totalWarnings":  0,
                    "totalLines":  133
                },
    "rawOutput":  [
                      "",
                      "\u003e stormcom@0.1.0 type-check",
                      "\u003e tsc --noEmit",
                      "",
                      "tests/unit/app/api/analytics-api.test.ts(58,38): error TS2345: Argument of type \u0027{ id: string; userId: string; storeId: string; role: string; expiresAt: Date; }\u0027 is not assignable to parameter of type \u0027SessionData\u0027.",
                      "  Type \u0027{ id: string; userId: string; storeId: string; role: string; expiresAt: Date; }\u0027 is missing the following properties from type \u0027SessionData\u0027: email, createdAt, lastAccessedAt",
                      "tests/unit/app/api/analytics-api.test.ts(157,40): error TS2345: Argument of type \u0027{ storeId: null; id: string; userId: string; role: string; expiresAt: Date; }\u0027 is not assignable to parameter of type \u0027SessionData\u0027.",
                      "  Type \u0027{ storeId: null; id: string; userId: string; role: string; expiresAt: Date; }\u0027 is missing the following properties from type \u0027SessionData\u0027: email, createdAt, lastAccessedAt",
                      "tests/unit/app/api/analytics-routes.test.ts(19,1): error TS6133: \u0027revenueHandler\u0027 is declared but its value is never read.",
                      "tests/unit/app/api/analytics-routes.test.ts(38,34): error TS2307: Cannot find module \u0027../../../src/services/analytics-service\u0027 or its corresponding type declarations.",
                      "tests/unit/app/api/analytics-routes.test.ts(39,39): error TS2307: Cannot find module \u0027../../../src/lib/session-storage\u0027 or its corresponding type declarations.",
                      "tests/unit/app/api/analytics-routes.test.ts(190,30): error TS2304: Cannot find name \u0027ordersHandler\u0027.",
                      "tests/unit/app/api/analytics-routes.test.ts(222,30): error TS2304: Cannot find name \u0027ordersHandler\u0027.",
                      "tests/unit/app/api/analytics-routes.test.ts(223,13): error TS6133: \u0027data\u0027 is declared but its value is never read.",
                      "tests/unit/app/api/analytics-routes.test.ts(243,30): error TS2304: Cannot find name \u0027ordersHandler\u0027.",
                      "tests/unit/app/api/analytics-routes.test.ts(369,13): error TS6133: \u0027data\u0027 is declared but its value is never read.",
                      "tests/unit/app/api/analytics-routes.test.ts(420,9): error TS2304: Cannot find name \u0027ordersHandler\u0027.",
                      "tests/unit/app/api/subscription/checkout/route.test.ts(6,22): error TS2307: Cannot find module \u0027@/app/api/subscription/checkout/route\u0027 or its corresponding type declarations.",
                      "tests/unit/app/api/subscription/checkout/route.test.ts(7,10): error TS2305: Module \u0027\"@/lib/auth-helpers\"\u0027 has no exported member \u0027getSessionFromRequest\u0027.",
                      "tests/unit/app/api/subscription/checkout/route.test.ts(51,49): error TS2345: Argument of type \u0027{ id: string; url: string; }\u0027 is not assignable to parameter of type \u0027Session\u0027.",
                      "  Type \u0027{ id: string; url: string; }\u0027 is missing the following properties from type \u0027Session\u0027: object, adaptive_pricing, after_expiration, allow_promotion_codes, and 46 more.",
                      "tests/unit/app/api/subscription/checkout/route.test.ts(85,49): error TS2345: Argument of type \u0027{ id: string; url: string; }\u0027 is not assignable to parameter of type \u0027Session\u0027.",
                      "  Type \u0027{ id: string; url: string; }\u0027 is missing the following properties from type \u0027Session\u0027: object, adaptive_pricing, after_expiration, allow_promotion_codes, and 46 more.",
                      "tests/unit/app/api/subscription/checkout/route.test.ts(91,11): error TS6133: \u0027data\u0027 is declared but its value is never read.",
                      "tests/unit/app/api/subscription/checkout/route.test.ts(341,49): error TS2345: Argument of type \u0027{ id: string; url: null; }\u0027 is not assignable to parameter of type \u0027Session\u0027.",
                      "  Type \u0027{ id: string; url: null; }\u0027 is missing the following properties from type \u0027Session\u0027: object, adaptive_pricing, after_expiration, allow_promotion_codes, and 46 more.",
                      "tests/unit/app/api/subscription/plans/route.test.ts(6,21): error TS2307: Cannot find module \u0027@/app/api/subscription/plans/route\u0027 or its corresponding type declarations.",
                      "tests/unit/app/api/subscription/plans/route.test.ts(7,10): error TS2305: Module \u0027\"@/lib/auth-helpers\"\u0027 has no exported member \u0027getSessionFromRequest\u0027.",
                      "tests/unit/app/api/subscription/plans/route.test.ts(44,52): error TS2551: Property \u0027getUsageStatistics\u0027 does not exist on type \u0027typeof SubscriptionService\u0027. Did you mean \u0027getUsageStats\u0027?",
                      "tests/unit/app/api/subscription/portal/route.test.ts(6,22): error TS2307: Cannot find module \u0027@/app/api/subscription/portal/route\u0027 or its corresponding type declarations.",
                      "tests/unit/app/api/subscription/portal/route.test.ts(7,10): error TS2305: Module \u0027\"@/lib/auth-helpers\"\u0027 has no exported member \u0027getSessionFromRequest\u0027.",
                      "tests/unit/app/api/subscription/portal/route.test.ts(52,47): error TS2345: Argument of type \u0027{ id: string; url: string; }\u0027 is not assignable to parameter of type \u0027Session\u0027.",
                      "  Type \u0027{ id: string; url: string; }\u0027 is missing the following properties from type \u0027Session\u0027: object, configuration, created, customer, and 5 more.",
                      "tests/unit/app/api/subscription/portal/route.test.ts(84,47): error TS2345: Argument of type \u0027{ id: string; url: string; }\u0027 is not assignable to parameter of type \u0027Session\u0027.",
                      "  Type \u0027{ id: string; url: string; }\u0027 is missing the following properties from type \u0027Session\u0027: object, configuration, created, customer, and 5 more.",
                      "tests/unit/app/api/subscription/portal/route.test.ts(90,11): error TS6133: \u0027data\u0027 is declared but its value is never read.",
                      "tests/unit/app/api/subscription/portal/route.test.ts(341,7): error TS2322: Type \u0027null\u0027 is not assignable to type \u0027string\u0027.",
                      "tests/unit/app/api/subscription/webhook/route.test.ts(6,22): error TS2307: Cannot find module \u0027@/app/api/subscription/webhook/route\u0027 or its corresponding type declarations.",
                      "tests/unit/app/api/subscription/webhook/route.test.ts(53,7): error TS2353: Object literal may only specify known properties, and \u0027success\u0027 does not exist in type \u0027{ received: boolean; }\u0027.",
                      "tests/unit/app/api/subscription/webhook/route.test.ts(178,7): error TS2353: Object literal may only specify known properties, and \u0027success\u0027 does not exist in type \u0027{ received: boolean; }\u0027.",
                      "tests/unit/app/api/subscription/webhook/route.test.ts(205,7): error TS2353: Object literal may only specify known properties, and \u0027success\u0027 does not exist in type \u0027{ received: boolean; }\u0027.",
                      "tests/unit/app/api/subscription/webhook/route.test.ts(232,7): error TS2353: Object literal may only specify known properties, and \u0027success\u0027 does not exist in type \u0027{ received: boolean; }\u0027.",
                      "tests/unit/app/api/subscription/webhook/route.test.ts(293,7): error TS2353: Object literal may only specify known properties, and \u0027success\u0027 does not exist in type \u0027{ received: boolean; }\u0027.",
                      "tests/unit/app/api/subscription/webhook/route.test.ts(327,7): error TS2353: Object literal may only specify known properties, and \u0027success\u0027 does not exist in type \u0027{ received: boolean; }\u0027.",
                      "tests/unit/app/api/subscription/webhook/route.test.ts(351,7): error TS2353: Object literal may only specify known properties, and \u0027success\u0027 does not exist in type \u0027{ received: boolean; }\u0027.",
                      "tests/unit/app/api/theme-routes.test.ts(152,55): error TS2353: Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                      "tests/unit/app/api/theme-routes.test.ts(197,55): error TS2353: Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                      "tests/unit/app/api/theme-routes.test.ts(221,55): error TS2353: Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                      "tests/unit/app/api/theme-routes.test.ts(242,55): error TS2353: Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                      "tests/unit/app/api/theme-routes.test.ts(286,55): error TS2353: Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                      "tests/unit/app/api/theme-routes.test.ts(330,55): error TS2353: Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                      "tests/unit/app/api/theme-routes.test.ts(348,58): error TS2353: Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                      "tests/unit/app/api/theme-routes.test.ts(387,58): error TS2353: Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                      "tests/unit/app/api/theme-routes.test.ts(411,58): error TS2353: Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                      "tests/unit/components/analytics-components.test.tsx(42,18): error TS6133: \u0027options\u0027 is declared but its value is never read.",
                      "tests/unit/hooks/analytics-hooks.test.ts(331,39): error TS2339: Property \u0027transformRevenueData\u0027 does not exist on type \u0027typeof import(\"F:/codestorm/stormcom/src/lib/chart-utils\")\u0027.",
                      "tests/unit/hooks/analytics-hooks.test.ts(332,39): error TS2339: Property \u0027transformProductData\u0027 does not exist on type \u0027typeof import(\"F:/codestorm/stormcom/src/lib/chart-utils\")\u0027.",
                      "tests/unit/hooks/analytics-hooks.test.ts(414,38): error TS2339: Property \u0027getDateRangePresets\u0027 does not exist on type \u0027typeof import(\"F:/codestorm/stormcom/src/lib/date-utils\")\u0027.",
                      "tests/unit/hooks/analytics-hooks.test.ts(415,36): error TS2339: Property \u0027validateDateRange\u0027 does not exist on type \u0027typeof import(\"F:/codestorm/stormcom/src/lib/date-utils\")\u0027.",
                      "tests/unit/hooks/analytics-hooks.test.ts(483,33): error TS2339: Property \u0027memoizeApiCall\u0027 does not exist on type \u0027typeof import(\"F:/codestorm/stormcom/src/lib/performance-utils\")\u0027.",
                      "tests/unit/hooks/analytics-hooks.test.ts(561,33): error TS2339: Property \u0027handleApiError\u0027 does not exist on type \u0027typeof import(\"F:/codestorm/stormcom/src/lib/error-utils\")\u0027.",
                      "tests/unit/hooks/analytics-hooks.test.ts(562,35): error TS2339: Property \u0027retryWithBackoff\u0027 does not exist on type \u0027typeof import(\"F:/codestorm/stormcom/src/lib/error-utils\")\u0027.",
                      "tests/unit/hooks/use-plan-enforcement.test.ts(6,76): error TS2307: Cannot find module \u0027@/hooks/use-plan-enforcement\u0027 or its corresponding type declarations.",
                      "tests/unit/hooks/use-plan-enforcement.test.ts(21,52): error TS2551: Property \u0027getUsageStatistics\u0027 does not exist on type \u0027typeof SubscriptionService\u0027. Did you mean \u0027getUsageStats\u0027?",
                      "tests/unit/lib/plan-enforcement.test.ts(13,10): error TS2305: Module \u0027\"@/lib/auth-helpers\"\u0027 has no exported member \u0027getSessionFromRequest\u0027.",
                      "tests/unit/lib/plan-enforcement.test.ts(253,13): error TS6133: \u0027result\u0027 is declared but its value is never read.",
                      "tests/unit/lib/plan-enforcement.test.ts(320,13): error TS6133: \u0027result\u0027 is declared but its value is never read.",
                      "tests/unit/lib/plan-enforcement.test.ts(355,13): error TS6133: \u0027result\u0027 is declared but its value is never read.",
                      "tests/unit/lib/plan-enforcement.test.ts(412,13): error TS6133: \u0027result\u0027 is declared but its value is never read.",
                      "tests/unit/lib/plan-enforcement.test.ts(427,43): error TS6133: \u0027request\u0027 is declared but its value is never read.",
                      "tests/unit/lib/plan-enforcement.test.ts(431,45): error TS2345: Argument of type \u0027Mock\u003c(request: any, { params }: any) =\u003e NextResponse\u003c{ id: any; }\u003e\u003e\u0027 is not assignable to parameter of type \u0027(request: NextRequest, context?: any) =\u003e Promise\u003cNextResponse\u003cunknown\u003e\u003e\u0027.",
                      "  Type \u0027NextResponse\u003c{ id: any; }\u003e\u0027 is missing the following properties from type \u0027Promise\u003cNextResponse\u003cunknown\u003e\u003e\u0027: then, catch, finally, [Symbol.toStringTag]",
                      "tests/unit/lib/security-headers.test.ts(261,26): error TS1308: \u0027await\u0027 expressions are only allowed within async functions and at the top levels of modules.",
                      "tests/unit/lib/security-headers.test.ts(287,23): error TS2339: Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                      "tests/unit/lib/security-headers.test.ts(292,29): error TS2339: Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                      "tests/unit/lib/security-headers.test.ts(311,23): error TS2339: Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                      "tests/unit/lib/security-headers.test.ts(313,28): error TS2339: Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                      "tests/unit/lib/security-headers.test.ts(319,28): error TS2339: Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                      "tests/unit/lib/security-headers.test.ts(331,23): error TS2339: Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                      "tests/unit/lib/security-headers.test.ts(336,27): error TS2339: Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                      "tests/unit/lib/security-headers.test.ts(350,28): error TS2339: Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                      "tests/unit/lib/security-headers.test.ts(358,28): error TS2339: Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                      "tests/unit/lib/security-headers.test.ts(366,28): error TS2339: Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                      "tests/unit/lib/security-headers.test.ts(373,28): error TS2339: Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(65,29): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(98,29): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(114,29): error TS2339: Property \u0027mockRejectedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(141,29): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(174,29): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(200,29): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(217,29): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(248,32): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderItemGroupByArgs, HasSelectOrTake extends Or\u003cExtends\u003c\"skip\", Keys\u003cT\u003e\u003e, Extends\u003c\"take\", Keys\u003cT\u003e\u003e\u003e, OrderByArg extends True extends HasSelectOrTake ? { orderBy: OrderItemGroupByArgs[\"orderBy\"]; } : { orderBy?: OrderItemGroupByArgs[\"orderBy\"]; }, OrderFields extends ExcludeUnderscoreKeys\u003cKeys\u003cMaybeTupleT...\u0027.",
                      "tests/unit/services/analytics-service.test.ts(249,31): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends ProductFindManyArgs\u003e(args?: SelectSubset\u003cT, ProductFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$ProductPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(278,32): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderItemGroupByArgs, HasSelectOrTake extends Or\u003cExtends\u003c\"skip\", Keys\u003cT\u003e\u003e, Extends\u003c\"take\", Keys\u003cT\u003e\u003e\u003e, OrderByArg extends True extends HasSelectOrTake ? { orderBy: OrderItemGroupByArgs[\"orderBy\"]; } : { orderBy?: OrderItemGroupByArgs[\"orderBy\"]; }, OrderFields extends ExcludeUnderscoreKeys\u003cKeys\u003cMaybeTupleT...\u0027.",
                      "tests/unit/services/analytics-service.test.ts(279,31): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends ProductFindManyArgs\u003e(args?: SelectSubset\u003cT, ProductFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$ProductPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(307,29): error TS2339: Property \u0027mockResolvedValueOnce\u0027 does not exist on type \u0027\u003cT extends CustomerCountArgs\u003e(args?: Subset\u003cT, CustomerCountArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cT extends Record_2\u003c\"select\", any\u003e ? T[\"select\"] extends true ? number : { [P in keyof T[\"select\"]]: P extends keyof CustomerCountAggregateOutputType ? CustomerCountAggregateOutputType[P] : never; } : number\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(309,29): error TS2339: Property \u0027mockResolvedValueOnce\u0027 does not exist on type \u0027\u003cT extends CustomerCountArgs\u003e(args?: Subset\u003cT, CustomerCountArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cT extends Record_2\u003c\"select\", any\u003e ? T[\"select\"] extends true ? number : { [P in keyof T[\"select\"]]: P extends keyof CustomerCountAggregateOutputType ? CustomerCountAggregateOutputType[P] : never; } : number\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(311,28): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderGroupByArgs, HasSelectOrTake extends Or\u003cExtends\u003c\"skip\", Keys\u003cT\u003e\u003e, Extends\u003c\"take\", Keys\u003cT\u003e\u003e\u003e, OrderByArg extends True extends HasSelectOrTake ? { orderBy: OrderGroupByArgs[\"orderBy\"]; } : { orderBy?: OrderGroupByArgs[\"orderBy\"]; }, OrderFields extends ExcludeUnderscoreKeys\u003cKeys\u003cMaybeTupleToUnion\u003cT[\"or...\u0027.",
                      "tests/unit/services/analytics-service.test.ts(313,29): error TS2339: Property \u0027mockResolvedValueOnce\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(315,29): error TS2339: Property \u0027mockResolvedValueOnce\u0027 does not exist on type \u0027\u003cT extends CustomerCountArgs\u003e(args?: Subset\u003cT, CustomerCountArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cT extends Record_2\u003c\"select\", any\u003e ? T[\"select\"] extends true ? number : { [P in keyof T[\"select\"]]: P extends keyof CustomerCountAggregateOutputType ? CustomerCountAggregateOutputType[P] : never; } : number\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(332,29): error TS2339: Property \u0027mockResolvedValueOnce\u0027 does not exist on type \u0027\u003cT extends CustomerCountArgs\u003e(args?: Subset\u003cT, CustomerCountArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cT extends Record_2\u003c\"select\", any\u003e ? T[\"select\"] extends true ? number : { [P in keyof T[\"select\"]]: P extends keyof CustomerCountAggregateOutputType ? CustomerCountAggregateOutputType[P] : never; } : number\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(333,32): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends CustomerFindManyArgs\u003e(args?: SelectSubset\u003cT, CustomerFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$CustomerPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(334,28): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderGroupByArgs, HasSelectOrTake extends Or\u003cExtends\u003c\"skip\", Keys\u003cT\u003e\u003e, Extends\u003c\"take\", Keys\u003cT\u003e\u003e\u003e, OrderByArg extends True extends HasSelectOrTake ? { orderBy: OrderGroupByArgs[\"orderBy\"]; } : { orderBy?: OrderGroupByArgs[\"orderBy\"]; }, OrderFields extends ExcludeUnderscoreKeys\u003cKeys\u003cMaybeTupleToUnion\u003cT[\"or...\u0027.",
                      "tests/unit/services/analytics-service.test.ts(335,29): error TS2339: Property \u0027mockResolvedValueOnce\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(336,29): error TS2339: Property \u0027mockResolvedValueOnce\u0027 does not exist on type \u0027\u003cT extends CustomerCountArgs\u003e(args?: Subset\u003cT, CustomerCountArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cT extends Record_2\u003c\"select\", any\u003e ? T[\"select\"] extends true ? number : { [P in keyof T[\"select\"]]: P extends keyof CustomerCountAggregateOutputType ? CustomerCountAggregateOutputType[P] : never; } : number\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(355,29): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(359,32): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderItemGroupByArgs, HasSelectOrTake extends Or\u003cExtends\u003c\"skip\", Keys\u003cT\u003e\u003e, Extends\u003c\"take\", Keys\u003cT\u003e\u003e\u003e, OrderByArg extends True extends HasSelectOrTake ? { orderBy: OrderItemGroupByArgs[\"orderBy\"]; } : { orderBy?: OrderItemGroupByArgs[\"orderBy\"]; }, OrderFields extends ExcludeUnderscoreKeys\u003cKeys\u003cMaybeTupleT...\u0027.",
                      "tests/unit/services/analytics-service.test.ts(360,31): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends ProductFindManyArgs\u003e(args?: SelectSubset\u003cT, ProductFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$ProductPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(362,29): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends CustomerCountArgs\u003e(args?: Subset\u003cT, CustomerCountArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cT extends Record_2\u003c\"select\", any\u003e ? T[\"select\"] extends true ? number : { [P in keyof T[\"select\"]]: P extends keyof CustomerCountAggregateOutputType ? CustomerCountAggregateOutputType[P] : never; } : number\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(363,28): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderGroupByArgs, HasSelectOrTake extends Or\u003cExtends\u003c\"skip\", Keys\u003cT\u003e\u003e, Extends\u003c\"take\", Keys\u003cT\u003e\u003e\u003e, OrderByArg extends True extends HasSelectOrTake ? { orderBy: OrderGroupByArgs[\"orderBy\"]; } : { orderBy?: OrderGroupByArgs[\"orderBy\"]; }, OrderFields extends ExcludeUnderscoreKeys\u003cKeys\u003cMaybeTupleToUnion\u003cT[\"or...\u0027.",
                      "tests/unit/services/analytics-service.test.ts(380,29): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(399,29): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(410,29): error TS2339: Property \u0027mockRejectedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(422,29): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                      "tests/unit/services/analytics-service.test.ts(443,29): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                      "tests/unit/services/email-service.test.ts(36,17): error TS2540: Cannot assign to \u0027NODE_ENV\u0027 because it is a read-only property.",
                      "tests/unit/services/email-service.test.ts(108,17): error TS2540: Cannot assign to \u0027NODE_ENV\u0027 because it is a read-only property.",
                      "tests/unit/services/email-service.test.ts(200,17): error TS2540: Cannot assign to \u0027NODE_ENV\u0027 because it is a read-only property.",
                      "tests/unit/services/email-service.test.ts(268,17): error TS2540: Cannot assign to \u0027NODE_ENV\u0027 because it is a read-only property.",
                      "tests/unit/services/email-service.test.ts(381,17): error TS2540: Cannot assign to \u0027NODE_ENV\u0027 because it is a read-only property.",
                      "tests/unit/services/email-service.test.ts(476,17): error TS2540: Cannot assign to \u0027NODE_ENV\u0027 because it is a read-only property.",
                      "tests/unit/services/email-service.test.ts(499,7): error TS2740: Type \u0027{ id: string; email: string; name: string; }\u0027 is missing the following properties from type \u0027{ name: string; password: string; id: string; email: string; phone: string | null; role: UserRole; storeId: string | null; mfaEnabled: boolean; mfaMethod: MFAMethod | null; ... 14 more ...; deletedAt: Date | null; }\u0027: password, phone, role, storeId, and 17 more.",
                      "tests/unit/services/email-service.test.ts(519,7): error TS2740: Type \u0027{ id: string; email: string; name: string; }\u0027 is missing the following properties from type \u0027{ name: string; password: string; id: string; email: string; phone: string | null; role: UserRole; storeId: string | null; mfaEnabled: boolean; mfaMethod: MFAMethod | null; ... 14 more ...; deletedAt: Date | null; }\u0027: password, phone, role, storeId, and 17 more.",
                      "tests/unit/services/email-service.test.ts(535,7): error TS2740: Type \u0027{ id: string; email: string; name: string; }\u0027 is missing the following properties from type \u0027{ name: string; password: string; id: string; email: string; phone: string | null; role: UserRole; storeId: string | null; mfaEnabled: boolean; mfaMethod: MFAMethod | null; ... 14 more ...; deletedAt: Date | null; }\u0027: password, phone, role, storeId, and 17 more.",
                      "tests/unit/services/email-service.test.ts(550,17): error TS2540: Cannot assign to \u0027NODE_ENV\u0027 because it is a read-only property.",
                      "tests/unit/services/email-service.test.ts(573,7): error TS2740: Type \u0027{ id: string; email: string; name: string; }\u0027 is missing the following properties from type \u0027{ name: string; password: string; id: string; email: string; phone: string | null; role: UserRole; storeId: string | null; mfaEnabled: boolean; mfaMethod: MFAMethod | null; ... 14 more ...; deletedAt: Date | null; }\u0027: password, phone, role, storeId, and 17 more.",
                      "tests/unit/services/email-service.test.ts(593,7): error TS2740: Type \u0027{ id: string; email: string; name: string; }\u0027 is missing the following properties from type \u0027{ name: string; password: string; id: string; email: string; phone: string | null; role: UserRole; storeId: string | null; mfaEnabled: boolean; mfaMethod: MFAMethod | null; ... 14 more ...; deletedAt: Date | null; }\u0027: password, phone, role, storeId, and 17 more.",
                      "tests/unit/services/email-service.test.ts(596,7): error TS2740: Type \u0027{ id: string; name: string; email: string; }\u0027 is missing the following properties from type \u0027{ name: string; locale: string; id: string; email: string; phone: string | null; createdAt: Date; updatedAt: Date; deletedAt: Date | null; slug: string; description: string | null; ... 14 more ...; timezone: string; }\u0027: locale, phone, createdAt, updatedAt, and 18 more.",
                      "tests/unit/services/email-service.test.ts(609,7): error TS2740: Type \u0027{ id: string; email: string; name: string; }\u0027 is missing the following properties from type \u0027{ name: string; password: string; id: string; email: string; phone: string | null; role: UserRole; storeId: string | null; mfaEnabled: boolean; mfaMethod: MFAMethod | null; ... 14 more ...; deletedAt: Date | null; }\u0027: password, phone, role, storeId, and 17 more.",
                      "tests/unit/services/subscription-service.test.ts(26,16): error TS2352: Conversion of type \u0027PrismaClient\u003cPrismaClientOptions, never, DefaultArgs\u003e\u0027 to type \u0027{ store: { findUnique: MockedFunction\u003cany\u003e; update: MockedFunction\u003cany\u003e; findMany: MockedFunction\u003cany\u003e; }; product: { count: MockedFunction\u003cany\u003e; }; order: { ...; }; }\u0027 may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to \u0027unknown\u0027 first.",
                      "  The types of \u0027store.findUnique\u0027 are incompatible between these types.",
                      "    Type \u0027\u003cT extends StoreFindUniqueArgs\u003e(args: SelectSubset\u003cT, StoreFindUniqueArgs\u003cDefaultArgs\u003e\u003e) =\u003e Prisma__StoreClient\u003cGetFindResult\u003c$StorePayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e | null, null, DefaultArgs, PrismaClientOptions\u003e\u0027 is not comparable to type \u0027MockedFunction\u003cany\u003e\u0027.",
                      "      Type \u0027\u003cT extends StoreFindUniqueArgs\u003e(args: SelectSubset\u003cT, StoreFindUniqueArgs\u003cDefaultArgs\u003e\u003e) =\u003e Prisma__StoreClient\u003cGetFindResult\u003c$StorePayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e | null, null, DefaultArgs, PrismaClientOptions\u003e\u0027 is missing the following properties from type \u0027Mock\u003cany\u003e\u0027: getMockName, mockName, mock, mockClear, and 14 more."
                  ],
    "errors":  [
                   {
                       "fullText":  "tests/unit/app/api/analytics-api.test.ts(58,38): error TS2345: Argument of type \u0027{ id: string; userId: string; storeId: string; role: string; expiresAt: Date; }\u0027 is not assignable to parameter of type \u0027SessionData\u0027.",
                       "file":  "tests/unit/app/api/analytics-api.test.ts",
                       "code":  "TS2345",
                       "line":  58,
                       "severity":  "error",
                       "message":  "Argument of type \u0027{ id: string; userId: string; storeId: string; role: string; expiresAt: Date; }\u0027 is not assignable to parameter of type \u0027SessionData\u0027. Type \u0027{ id: string; userId: string; storeId: string; role: string; expiresAt: Date; }\u0027 is missing the following properties from type \u0027SessionData\u0027: email, createdAt, lastAccessedAt",
                       "column":  38
                   },
                   {
                       "fullText":  "tests/unit/app/api/analytics-api.test.ts(157,40): error TS2345: Argument of type \u0027{ storeId: null; id: string; userId: string; role: string; expiresAt: Date; }\u0027 is not assignable to parameter of type \u0027SessionData\u0027.",
                       "file":  "tests/unit/app/api/analytics-api.test.ts",
                       "code":  "TS2345",
                       "line":  157,
                       "severity":  "error",
                       "message":  "Argument of type \u0027{ storeId: null; id: string; userId: string; role: string; expiresAt: Date; }\u0027 is not assignable to parameter of type \u0027SessionData\u0027. Type \u0027{ storeId: null; id: string; userId: string; role: string; expiresAt: Date; }\u0027 is missing the following properties from type \u0027SessionData\u0027: email, createdAt, lastAccessedAt",
                       "column":  40
                   },
                   {
                       "message":  "\u0027revenueHandler\u0027 is declared but its value is never read.",
                       "column":  1,
                       "line":  19,
                       "fullText":  "tests/unit/app/api/analytics-routes.test.ts(19,1): error TS6133: \u0027revenueHandler\u0027 is declared but its value is never read.",
                       "code":  "TS6133",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/analytics-routes.test.ts"
                   },
                   {
                       "message":  "Cannot find module \u0027../../../src/services/analytics-service\u0027 or its corresponding type declarations.",
                       "column":  34,
                       "line":  38,
                       "fullText":  "tests/unit/app/api/analytics-routes.test.ts(38,34): error TS2307: Cannot find module \u0027../../../src/services/analytics-service\u0027 or its corresponding type declarations.",
                       "code":  "TS2307",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/analytics-routes.test.ts"
                   },
                   {
                       "message":  "Cannot find module \u0027../../../src/lib/session-storage\u0027 or its corresponding type declarations.",
                       "column":  39,
                       "line":  39,
                       "fullText":  "tests/unit/app/api/analytics-routes.test.ts(39,39): error TS2307: Cannot find module \u0027../../../src/lib/session-storage\u0027 or its corresponding type declarations.",
                       "code":  "TS2307",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/analytics-routes.test.ts"
                   },
                   {
                       "message":  "Cannot find name \u0027ordersHandler\u0027.",
                       "column":  30,
                       "line":  190,
                       "fullText":  "tests/unit/app/api/analytics-routes.test.ts(190,30): error TS2304: Cannot find name \u0027ordersHandler\u0027.",
                       "code":  "TS2304",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/analytics-routes.test.ts"
                   },
                   {
                       "message":  "Cannot find name \u0027ordersHandler\u0027.",
                       "column":  30,
                       "line":  222,
                       "fullText":  "tests/unit/app/api/analytics-routes.test.ts(222,30): error TS2304: Cannot find name \u0027ordersHandler\u0027.",
                       "code":  "TS2304",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/analytics-routes.test.ts"
                   },
                   {
                       "message":  "\u0027data\u0027 is declared but its value is never read.",
                       "column":  13,
                       "line":  223,
                       "fullText":  "tests/unit/app/api/analytics-routes.test.ts(223,13): error TS6133: \u0027data\u0027 is declared but its value is never read.",
                       "code":  "TS6133",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/analytics-routes.test.ts"
                   },
                   {
                       "message":  "Cannot find name \u0027ordersHandler\u0027.",
                       "column":  30,
                       "line":  243,
                       "fullText":  "tests/unit/app/api/analytics-routes.test.ts(243,30): error TS2304: Cannot find name \u0027ordersHandler\u0027.",
                       "code":  "TS2304",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/analytics-routes.test.ts"
                   },
                   {
                       "message":  "\u0027data\u0027 is declared but its value is never read.",
                       "column":  13,
                       "line":  369,
                       "fullText":  "tests/unit/app/api/analytics-routes.test.ts(369,13): error TS6133: \u0027data\u0027 is declared but its value is never read.",
                       "code":  "TS6133",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/analytics-routes.test.ts"
                   },
                   {
                       "message":  "Cannot find name \u0027ordersHandler\u0027.",
                       "column":  9,
                       "line":  420,
                       "fullText":  "tests/unit/app/api/analytics-routes.test.ts(420,9): error TS2304: Cannot find name \u0027ordersHandler\u0027.",
                       "code":  "TS2304",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/analytics-routes.test.ts"
                   },
                   {
                       "message":  "Cannot find module \u0027@/app/api/subscription/checkout/route\u0027 or its corresponding type declarations.",
                       "column":  22,
                       "line":  6,
                       "fullText":  "tests/unit/app/api/subscription/checkout/route.test.ts(6,22): error TS2307: Cannot find module \u0027@/app/api/subscription/checkout/route\u0027 or its corresponding type declarations.",
                       "code":  "TS2307",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/subscription/checkout/route.test.ts"
                   },
                   {
                       "message":  "Module \u0027\"@/lib/auth-helpers\"\u0027 has no exported member \u0027getSessionFromRequest\u0027.",
                       "column":  10,
                       "line":  7,
                       "fullText":  "tests/unit/app/api/subscription/checkout/route.test.ts(7,10): error TS2305: Module \u0027\"@/lib/auth-helpers\"\u0027 has no exported member \u0027getSessionFromRequest\u0027.",
                       "code":  "TS2305",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/subscription/checkout/route.test.ts"
                   },
                   {
                       "fullText":  "tests/unit/app/api/subscription/checkout/route.test.ts(51,49): error TS2345: Argument of type \u0027{ id: string; url: string; }\u0027 is not assignable to parameter of type \u0027Session\u0027.",
                       "file":  "tests/unit/app/api/subscription/checkout/route.test.ts",
                       "code":  "TS2345",
                       "line":  51,
                       "severity":  "error",
                       "message":  "Argument of type \u0027{ id: string; url: string; }\u0027 is not assignable to parameter of type \u0027Session\u0027. Type \u0027{ id: string; url: string; }\u0027 is missing the following properties from type \u0027Session\u0027: object, adaptive_pricing, after_expiration, allow_promotion_codes, and 46 more.",
                       "column":  49
                   },
                   {
                       "fullText":  "tests/unit/app/api/subscription/checkout/route.test.ts(85,49): error TS2345: Argument of type \u0027{ id: string; url: string; }\u0027 is not assignable to parameter of type \u0027Session\u0027.",
                       "file":  "tests/unit/app/api/subscription/checkout/route.test.ts",
                       "code":  "TS2345",
                       "line":  85,
                       "severity":  "error",
                       "message":  "Argument of type \u0027{ id: string; url: string; }\u0027 is not assignable to parameter of type \u0027Session\u0027. Type \u0027{ id: string; url: string; }\u0027 is missing the following properties from type \u0027Session\u0027: object, adaptive_pricing, after_expiration, allow_promotion_codes, and 46 more.",
                       "column":  49
                   },
                   {
                       "message":  "\u0027data\u0027 is declared but its value is never read.",
                       "column":  11,
                       "line":  91,
                       "fullText":  "tests/unit/app/api/subscription/checkout/route.test.ts(91,11): error TS6133: \u0027data\u0027 is declared but its value is never read.",
                       "code":  "TS6133",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/subscription/checkout/route.test.ts"
                   },
                   {
                       "fullText":  "tests/unit/app/api/subscription/checkout/route.test.ts(341,49): error TS2345: Argument of type \u0027{ id: string; url: null; }\u0027 is not assignable to parameter of type \u0027Session\u0027.",
                       "file":  "tests/unit/app/api/subscription/checkout/route.test.ts",
                       "code":  "TS2345",
                       "line":  341,
                       "severity":  "error",
                       "message":  "Argument of type \u0027{ id: string; url: null; }\u0027 is not assignable to parameter of type \u0027Session\u0027. Type \u0027{ id: string; url: null; }\u0027 is missing the following properties from type \u0027Session\u0027: object, adaptive_pricing, after_expiration, allow_promotion_codes, and 46 more.",
                       "column":  49
                   },
                   {
                       "message":  "Cannot find module \u0027@/app/api/subscription/plans/route\u0027 or its corresponding type declarations.",
                       "column":  21,
                       "line":  6,
                       "fullText":  "tests/unit/app/api/subscription/plans/route.test.ts(6,21): error TS2307: Cannot find module \u0027@/app/api/subscription/plans/route\u0027 or its corresponding type declarations.",
                       "code":  "TS2307",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/subscription/plans/route.test.ts"
                   },
                   {
                       "message":  "Module \u0027\"@/lib/auth-helpers\"\u0027 has no exported member \u0027getSessionFromRequest\u0027.",
                       "column":  10,
                       "line":  7,
                       "fullText":  "tests/unit/app/api/subscription/plans/route.test.ts(7,10): error TS2305: Module \u0027\"@/lib/auth-helpers\"\u0027 has no exported member \u0027getSessionFromRequest\u0027.",
                       "code":  "TS2305",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/subscription/plans/route.test.ts"
                   },
                   {
                       "message":  "Property \u0027getUsageStatistics\u0027 does not exist on type \u0027typeof SubscriptionService\u0027. Did you mean \u0027getUsageStats\u0027?",
                       "column":  52,
                       "line":  44,
                       "fullText":  "tests/unit/app/api/subscription/plans/route.test.ts(44,52): error TS2551: Property \u0027getUsageStatistics\u0027 does not exist on type \u0027typeof SubscriptionService\u0027. Did you mean \u0027getUsageStats\u0027?",
                       "code":  "TS2551",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/subscription/plans/route.test.ts"
                   },
                   {
                       "message":  "Cannot find module \u0027@/app/api/subscription/portal/route\u0027 or its corresponding type declarations.",
                       "column":  22,
                       "line":  6,
                       "fullText":  "tests/unit/app/api/subscription/portal/route.test.ts(6,22): error TS2307: Cannot find module \u0027@/app/api/subscription/portal/route\u0027 or its corresponding type declarations.",
                       "code":  "TS2307",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/subscription/portal/route.test.ts"
                   },
                   {
                       "message":  "Module \u0027\"@/lib/auth-helpers\"\u0027 has no exported member \u0027getSessionFromRequest\u0027.",
                       "column":  10,
                       "line":  7,
                       "fullText":  "tests/unit/app/api/subscription/portal/route.test.ts(7,10): error TS2305: Module \u0027\"@/lib/auth-helpers\"\u0027 has no exported member \u0027getSessionFromRequest\u0027.",
                       "code":  "TS2305",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/subscription/portal/route.test.ts"
                   },
                   {
                       "fullText":  "tests/unit/app/api/subscription/portal/route.test.ts(52,47): error TS2345: Argument of type \u0027{ id: string; url: string; }\u0027 is not assignable to parameter of type \u0027Session\u0027.",
                       "file":  "tests/unit/app/api/subscription/portal/route.test.ts",
                       "code":  "TS2345",
                       "line":  52,
                       "severity":  "error",
                       "message":  "Argument of type \u0027{ id: string; url: string; }\u0027 is not assignable to parameter of type \u0027Session\u0027. Type \u0027{ id: string; url: string; }\u0027 is missing the following properties from type \u0027Session\u0027: object, configuration, created, customer, and 5 more.",
                       "column":  47
                   },
                   {
                       "fullText":  "tests/unit/app/api/subscription/portal/route.test.ts(84,47): error TS2345: Argument of type \u0027{ id: string; url: string; }\u0027 is not assignable to parameter of type \u0027Session\u0027.",
                       "file":  "tests/unit/app/api/subscription/portal/route.test.ts",
                       "code":  "TS2345",
                       "line":  84,
                       "severity":  "error",
                       "message":  "Argument of type \u0027{ id: string; url: string; }\u0027 is not assignable to parameter of type \u0027Session\u0027. Type \u0027{ id: string; url: string; }\u0027 is missing the following properties from type \u0027Session\u0027: object, configuration, created, customer, and 5 more.",
                       "column":  47
                   },
                   {
                       "message":  "\u0027data\u0027 is declared but its value is never read.",
                       "column":  11,
                       "line":  90,
                       "fullText":  "tests/unit/app/api/subscription/portal/route.test.ts(90,11): error TS6133: \u0027data\u0027 is declared but its value is never read.",
                       "code":  "TS6133",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/subscription/portal/route.test.ts"
                   },
                   {
                       "message":  "Type \u0027null\u0027 is not assignable to type \u0027string\u0027.",
                       "column":  7,
                       "line":  341,
                       "fullText":  "tests/unit/app/api/subscription/portal/route.test.ts(341,7): error TS2322: Type \u0027null\u0027 is not assignable to type \u0027string\u0027.",
                       "code":  "TS2322",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/subscription/portal/route.test.ts"
                   },
                   {
                       "message":  "Cannot find module \u0027@/app/api/subscription/webhook/route\u0027 or its corresponding type declarations.",
                       "column":  22,
                       "line":  6,
                       "fullText":  "tests/unit/app/api/subscription/webhook/route.test.ts(6,22): error TS2307: Cannot find module \u0027@/app/api/subscription/webhook/route\u0027 or its corresponding type declarations.",
                       "code":  "TS2307",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/subscription/webhook/route.test.ts"
                   },
                   {
                       "message":  "Object literal may only specify known properties, and \u0027success\u0027 does not exist in type \u0027{ received: boolean; }\u0027.",
                       "column":  7,
                       "line":  53,
                       "fullText":  "tests/unit/app/api/subscription/webhook/route.test.ts(53,7): error TS2353: Object literal may only specify known properties, and \u0027success\u0027 does not exist in type \u0027{ received: boolean; }\u0027.",
                       "code":  "TS2353",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/subscription/webhook/route.test.ts"
                   },
                   {
                       "message":  "Object literal may only specify known properties, and \u0027success\u0027 does not exist in type \u0027{ received: boolean; }\u0027.",
                       "column":  7,
                       "line":  178,
                       "fullText":  "tests/unit/app/api/subscription/webhook/route.test.ts(178,7): error TS2353: Object literal may only specify known properties, and \u0027success\u0027 does not exist in type \u0027{ received: boolean; }\u0027.",
                       "code":  "TS2353",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/subscription/webhook/route.test.ts"
                   },
                   {
                       "message":  "Object literal may only specify known properties, and \u0027success\u0027 does not exist in type \u0027{ received: boolean; }\u0027.",
                       "column":  7,
                       "line":  205,
                       "fullText":  "tests/unit/app/api/subscription/webhook/route.test.ts(205,7): error TS2353: Object literal may only specify known properties, and \u0027success\u0027 does not exist in type \u0027{ received: boolean; }\u0027.",
                       "code":  "TS2353",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/subscription/webhook/route.test.ts"
                   },
                   {
                       "message":  "Object literal may only specify known properties, and \u0027success\u0027 does not exist in type \u0027{ received: boolean; }\u0027.",
                       "column":  7,
                       "line":  232,
                       "fullText":  "tests/unit/app/api/subscription/webhook/route.test.ts(232,7): error TS2353: Object literal may only specify known properties, and \u0027success\u0027 does not exist in type \u0027{ received: boolean; }\u0027.",
                       "code":  "TS2353",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/subscription/webhook/route.test.ts"
                   },
                   {
                       "message":  "Object literal may only specify known properties, and \u0027success\u0027 does not exist in type \u0027{ received: boolean; }\u0027.",
                       "column":  7,
                       "line":  293,
                       "fullText":  "tests/unit/app/api/subscription/webhook/route.test.ts(293,7): error TS2353: Object literal may only specify known properties, and \u0027success\u0027 does not exist in type \u0027{ received: boolean; }\u0027.",
                       "code":  "TS2353",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/subscription/webhook/route.test.ts"
                   },
                   {
                       "message":  "Object literal may only specify known properties, and \u0027success\u0027 does not exist in type \u0027{ received: boolean; }\u0027.",
                       "column":  7,
                       "line":  327,
                       "fullText":  "tests/unit/app/api/subscription/webhook/route.test.ts(327,7): error TS2353: Object literal may only specify known properties, and \u0027success\u0027 does not exist in type \u0027{ received: boolean; }\u0027.",
                       "code":  "TS2353",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/subscription/webhook/route.test.ts"
                   },
                   {
                       "message":  "Object literal may only specify known properties, and \u0027success\u0027 does not exist in type \u0027{ received: boolean; }\u0027.",
                       "column":  7,
                       "line":  351,
                       "fullText":  "tests/unit/app/api/subscription/webhook/route.test.ts(351,7): error TS2353: Object literal may only specify known properties, and \u0027success\u0027 does not exist in type \u0027{ received: boolean; }\u0027.",
                       "code":  "TS2353",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/subscription/webhook/route.test.ts"
                   },
                   {
                       "message":  "Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                       "column":  55,
                       "line":  152,
                       "fullText":  "tests/unit/app/api/theme-routes.test.ts(152,55): error TS2353: Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                       "code":  "TS2353",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/theme-routes.test.ts"
                   },
                   {
                       "message":  "Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                       "column":  55,
                       "line":  197,
                       "fullText":  "tests/unit/app/api/theme-routes.test.ts(197,55): error TS2353: Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                       "code":  "TS2353",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/theme-routes.test.ts"
                   },
                   {
                       "message":  "Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                       "column":  55,
                       "line":  221,
                       "fullText":  "tests/unit/app/api/theme-routes.test.ts(221,55): error TS2353: Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                       "code":  "TS2353",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/theme-routes.test.ts"
                   },
                   {
                       "message":  "Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                       "column":  55,
                       "line":  242,
                       "fullText":  "tests/unit/app/api/theme-routes.test.ts(242,55): error TS2353: Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                       "code":  "TS2353",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/theme-routes.test.ts"
                   },
                   {
                       "message":  "Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                       "column":  55,
                       "line":  286,
                       "fullText":  "tests/unit/app/api/theme-routes.test.ts(286,55): error TS2353: Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                       "code":  "TS2353",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/theme-routes.test.ts"
                   },
                   {
                       "message":  "Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                       "column":  55,
                       "line":  330,
                       "fullText":  "tests/unit/app/api/theme-routes.test.ts(330,55): error TS2353: Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                       "code":  "TS2353",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/theme-routes.test.ts"
                   },
                   {
                       "message":  "Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                       "column":  58,
                       "line":  348,
                       "fullText":  "tests/unit/app/api/theme-routes.test.ts(348,58): error TS2353: Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                       "code":  "TS2353",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/theme-routes.test.ts"
                   },
                   {
                       "message":  "Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                       "column":  58,
                       "line":  387,
                       "fullText":  "tests/unit/app/api/theme-routes.test.ts(387,58): error TS2353: Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                       "code":  "TS2353",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/theme-routes.test.ts"
                   },
                   {
                       "message":  "Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                       "column":  58,
                       "line":  411,
                       "fullText":  "tests/unit/app/api/theme-routes.test.ts(411,58): error TS2353: Object literal may only specify known properties, and \u0027id\u0027 does not exist in type \u0027Promise\u003c{ id: string; }\u003e\u0027.",
                       "code":  "TS2353",
                       "severity":  "error",
                       "file":  "tests/unit/app/api/theme-routes.test.ts"
                   },
                   {
                       "message":  "\u0027options\u0027 is declared but its value is never read.",
                       "column":  18,
                       "line":  42,
                       "fullText":  "tests/unit/components/analytics-components.test.tsx(42,18): error TS6133: \u0027options\u0027 is declared but its value is never read.",
                       "code":  "TS6133",
                       "severity":  "error",
                       "file":  "tests/unit/components/analytics-components.test.tsx"
                   },
                   {
                       "message":  "Property \u0027transformRevenueData\u0027 does not exist on type \u0027typeof import(\"F:/codestorm/stormcom/src/lib/chart-utils\")\u0027.",
                       "column":  39,
                       "line":  331,
                       "fullText":  "tests/unit/hooks/analytics-hooks.test.ts(331,39): error TS2339: Property \u0027transformRevenueData\u0027 does not exist on type \u0027typeof import(\"F:/codestorm/stormcom/src/lib/chart-utils\")\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/hooks/analytics-hooks.test.ts"
                   },
                   {
                       "message":  "Property \u0027transformProductData\u0027 does not exist on type \u0027typeof import(\"F:/codestorm/stormcom/src/lib/chart-utils\")\u0027.",
                       "column":  39,
                       "line":  332,
                       "fullText":  "tests/unit/hooks/analytics-hooks.test.ts(332,39): error TS2339: Property \u0027transformProductData\u0027 does not exist on type \u0027typeof import(\"F:/codestorm/stormcom/src/lib/chart-utils\")\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/hooks/analytics-hooks.test.ts"
                   },
                   {
                       "message":  "Property \u0027getDateRangePresets\u0027 does not exist on type \u0027typeof import(\"F:/codestorm/stormcom/src/lib/date-utils\")\u0027.",
                       "column":  38,
                       "line":  414,
                       "fullText":  "tests/unit/hooks/analytics-hooks.test.ts(414,38): error TS2339: Property \u0027getDateRangePresets\u0027 does not exist on type \u0027typeof import(\"F:/codestorm/stormcom/src/lib/date-utils\")\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/hooks/analytics-hooks.test.ts"
                   },
                   {
                       "message":  "Property \u0027validateDateRange\u0027 does not exist on type \u0027typeof import(\"F:/codestorm/stormcom/src/lib/date-utils\")\u0027.",
                       "column":  36,
                       "line":  415,
                       "fullText":  "tests/unit/hooks/analytics-hooks.test.ts(415,36): error TS2339: Property \u0027validateDateRange\u0027 does not exist on type \u0027typeof import(\"F:/codestorm/stormcom/src/lib/date-utils\")\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/hooks/analytics-hooks.test.ts"
                   },
                   {
                       "message":  "Property \u0027memoizeApiCall\u0027 does not exist on type \u0027typeof import(\"F:/codestorm/stormcom/src/lib/performance-utils\")\u0027.",
                       "column":  33,
                       "line":  483,
                       "fullText":  "tests/unit/hooks/analytics-hooks.test.ts(483,33): error TS2339: Property \u0027memoizeApiCall\u0027 does not exist on type \u0027typeof import(\"F:/codestorm/stormcom/src/lib/performance-utils\")\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/hooks/analytics-hooks.test.ts"
                   },
                   {
                       "message":  "Property \u0027handleApiError\u0027 does not exist on type \u0027typeof import(\"F:/codestorm/stormcom/src/lib/error-utils\")\u0027.",
                       "column":  33,
                       "line":  561,
                       "fullText":  "tests/unit/hooks/analytics-hooks.test.ts(561,33): error TS2339: Property \u0027handleApiError\u0027 does not exist on type \u0027typeof import(\"F:/codestorm/stormcom/src/lib/error-utils\")\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/hooks/analytics-hooks.test.ts"
                   },
                   {
                       "message":  "Property \u0027retryWithBackoff\u0027 does not exist on type \u0027typeof import(\"F:/codestorm/stormcom/src/lib/error-utils\")\u0027.",
                       "column":  35,
                       "line":  562,
                       "fullText":  "tests/unit/hooks/analytics-hooks.test.ts(562,35): error TS2339: Property \u0027retryWithBackoff\u0027 does not exist on type \u0027typeof import(\"F:/codestorm/stormcom/src/lib/error-utils\")\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/hooks/analytics-hooks.test.ts"
                   },
                   {
                       "message":  "Cannot find module \u0027@/hooks/use-plan-enforcement\u0027 or its corresponding type declarations.",
                       "column":  76,
                       "line":  6,
                       "fullText":  "tests/unit/hooks/use-plan-enforcement.test.ts(6,76): error TS2307: Cannot find module \u0027@/hooks/use-plan-enforcement\u0027 or its corresponding type declarations.",
                       "code":  "TS2307",
                       "severity":  "error",
                       "file":  "tests/unit/hooks/use-plan-enforcement.test.ts"
                   },
                   {
                       "message":  "Property \u0027getUsageStatistics\u0027 does not exist on type \u0027typeof SubscriptionService\u0027. Did you mean \u0027getUsageStats\u0027?",
                       "column":  52,
                       "line":  21,
                       "fullText":  "tests/unit/hooks/use-plan-enforcement.test.ts(21,52): error TS2551: Property \u0027getUsageStatistics\u0027 does not exist on type \u0027typeof SubscriptionService\u0027. Did you mean \u0027getUsageStats\u0027?",
                       "code":  "TS2551",
                       "severity":  "error",
                       "file":  "tests/unit/hooks/use-plan-enforcement.test.ts"
                   },
                   {
                       "message":  "Module \u0027\"@/lib/auth-helpers\"\u0027 has no exported member \u0027getSessionFromRequest\u0027.",
                       "column":  10,
                       "line":  13,
                       "fullText":  "tests/unit/lib/plan-enforcement.test.ts(13,10): error TS2305: Module \u0027\"@/lib/auth-helpers\"\u0027 has no exported member \u0027getSessionFromRequest\u0027.",
                       "code":  "TS2305",
                       "severity":  "error",
                       "file":  "tests/unit/lib/plan-enforcement.test.ts"
                   },
                   {
                       "message":  "\u0027result\u0027 is declared but its value is never read.",
                       "column":  13,
                       "line":  253,
                       "fullText":  "tests/unit/lib/plan-enforcement.test.ts(253,13): error TS6133: \u0027result\u0027 is declared but its value is never read.",
                       "code":  "TS6133",
                       "severity":  "error",
                       "file":  "tests/unit/lib/plan-enforcement.test.ts"
                   },
                   {
                       "message":  "\u0027result\u0027 is declared but its value is never read.",
                       "column":  13,
                       "line":  320,
                       "fullText":  "tests/unit/lib/plan-enforcement.test.ts(320,13): error TS6133: \u0027result\u0027 is declared but its value is never read.",
                       "code":  "TS6133",
                       "severity":  "error",
                       "file":  "tests/unit/lib/plan-enforcement.test.ts"
                   },
                   {
                       "message":  "\u0027result\u0027 is declared but its value is never read.",
                       "column":  13,
                       "line":  355,
                       "fullText":  "tests/unit/lib/plan-enforcement.test.ts(355,13): error TS6133: \u0027result\u0027 is declared but its value is never read.",
                       "code":  "TS6133",
                       "severity":  "error",
                       "file":  "tests/unit/lib/plan-enforcement.test.ts"
                   },
                   {
                       "message":  "\u0027result\u0027 is declared but its value is never read.",
                       "column":  13,
                       "line":  412,
                       "fullText":  "tests/unit/lib/plan-enforcement.test.ts(412,13): error TS6133: \u0027result\u0027 is declared but its value is never read.",
                       "code":  "TS6133",
                       "severity":  "error",
                       "file":  "tests/unit/lib/plan-enforcement.test.ts"
                   },
                   {
                       "message":  "\u0027request\u0027 is declared but its value is never read.",
                       "column":  43,
                       "line":  427,
                       "fullText":  "tests/unit/lib/plan-enforcement.test.ts(427,43): error TS6133: \u0027request\u0027 is declared but its value is never read.",
                       "code":  "TS6133",
                       "severity":  "error",
                       "file":  "tests/unit/lib/plan-enforcement.test.ts"
                   },
                   {
                       "fullText":  "tests/unit/lib/plan-enforcement.test.ts(431,45): error TS2345: Argument of type \u0027Mock\u003c(request: any, { params }: any) =\u003e NextResponse\u003c{ id: any; }\u003e\u003e\u0027 is not assignable to parameter of type \u0027(request: NextRequest, context?: any) =\u003e Promise\u003cNextResponse\u003cunknown\u003e\u003e\u0027.",
                       "file":  "tests/unit/lib/plan-enforcement.test.ts",
                       "code":  "TS2345",
                       "line":  431,
                       "severity":  "error",
                       "message":  "Argument of type \u0027Mock\u003c(request: any, { params }: any) =\u003e NextResponse\u003c{ id: any; }\u003e\u003e\u0027 is not assignable to parameter of type \u0027(request: NextRequest, context?: any) =\u003e Promise\u003cNextResponse\u003cunknown\u003e\u003e\u0027. Type \u0027NextResponse\u003c{ id: any; }\u003e\u0027 is missing the following properties from type \u0027Promise\u003cNextResponse\u003cunknown\u003e\u003e\u0027: then, catch, finally, [Symbol.toStringTag]",
                       "column":  45
                   },
                   {
                       "message":  "\u0027await\u0027 expressions are only allowed within async functions and at the top levels of modules.",
                       "column":  26,
                       "line":  261,
                       "fullText":  "tests/unit/lib/security-headers.test.ts(261,26): error TS1308: \u0027await\u0027 expressions are only allowed within async functions and at the top levels of modules.",
                       "code":  "TS1308",
                       "severity":  "error",
                       "file":  "tests/unit/lib/security-headers.test.ts"
                   },
                   {
                       "message":  "Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                       "column":  23,
                       "line":  287,
                       "fullText":  "tests/unit/lib/security-headers.test.ts(287,23): error TS2339: Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/lib/security-headers.test.ts"
                   },
                   {
                       "message":  "Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                       "column":  29,
                       "line":  292,
                       "fullText":  "tests/unit/lib/security-headers.test.ts(292,29): error TS2339: Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/lib/security-headers.test.ts"
                   },
                   {
                       "message":  "Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                       "column":  23,
                       "line":  311,
                       "fullText":  "tests/unit/lib/security-headers.test.ts(311,23): error TS2339: Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/lib/security-headers.test.ts"
                   },
                   {
                       "message":  "Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                       "column":  28,
                       "line":  313,
                       "fullText":  "tests/unit/lib/security-headers.test.ts(313,28): error TS2339: Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/lib/security-headers.test.ts"
                   },
                   {
                       "message":  "Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                       "column":  28,
                       "line":  319,
                       "fullText":  "tests/unit/lib/security-headers.test.ts(319,28): error TS2339: Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/lib/security-headers.test.ts"
                   },
                   {
                       "message":  "Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                       "column":  23,
                       "line":  331,
                       "fullText":  "tests/unit/lib/security-headers.test.ts(331,23): error TS2339: Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/lib/security-headers.test.ts"
                   },
                   {
                       "message":  "Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                       "column":  27,
                       "line":  336,
                       "fullText":  "tests/unit/lib/security-headers.test.ts(336,27): error TS2339: Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/lib/security-headers.test.ts"
                   },
                   {
                       "message":  "Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                       "column":  28,
                       "line":  350,
                       "fullText":  "tests/unit/lib/security-headers.test.ts(350,28): error TS2339: Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/lib/security-headers.test.ts"
                   },
                   {
                       "message":  "Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                       "column":  28,
                       "line":  358,
                       "fullText":  "tests/unit/lib/security-headers.test.ts(358,28): error TS2339: Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/lib/security-headers.test.ts"
                   },
                   {
                       "message":  "Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                       "column":  28,
                       "line":  366,
                       "fullText":  "tests/unit/lib/security-headers.test.ts(366,28): error TS2339: Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/lib/security-headers.test.ts"
                   },
                   {
                       "message":  "Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                       "column":  28,
                       "line":  373,
                       "fullText":  "tests/unit/lib/security-headers.test.ts(373,28): error TS2339: Property \u0027headers\u0027 does not exist on type \u0027Promise\u003cResponse\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/lib/security-headers.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "column":  29,
                       "line":  65,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(65,29): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "column":  29,
                       "line":  98,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(98,29): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockRejectedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "column":  29,
                       "line":  114,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(114,29): error TS2339: Property \u0027mockRejectedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "column":  29,
                       "line":  141,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(141,29): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "column":  29,
                       "line":  174,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(174,29): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "column":  29,
                       "line":  200,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(200,29): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "column":  29,
                       "line":  217,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(217,29): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderItemGroupByArgs, HasSelectOrTake extends Or\u003cExtends\u003c\"skip\", Keys\u003cT\u003e\u003e, Extends\u003c\"take\", Keys\u003cT\u003e\u003e\u003e, OrderByArg extends True extends HasSelectOrTake ? { orderBy: OrderItemGroupByArgs[\"orderBy\"]; } : { orderBy?: OrderItemGroupByArgs[\"orderBy\"]; }, OrderFields extends ExcludeUnderscoreKeys\u003cKeys\u003cMaybeTupleT...\u0027.",
                       "column":  32,
                       "line":  248,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(248,32): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderItemGroupByArgs, HasSelectOrTake extends Or\u003cExtends\u003c\"skip\", Keys\u003cT\u003e\u003e, Extends\u003c\"take\", Keys\u003cT\u003e\u003e\u003e, OrderByArg extends True extends HasSelectOrTake ? { orderBy: OrderItemGroupByArgs[\"orderBy\"]; } : { orderBy?: OrderItemGroupByArgs[\"orderBy\"]; }, OrderFields extends ExcludeUnderscoreKeys\u003cKeys\u003cMaybeTupleT...\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends ProductFindManyArgs\u003e(args?: SelectSubset\u003cT, ProductFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$ProductPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "column":  31,
                       "line":  249,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(249,31): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends ProductFindManyArgs\u003e(args?: SelectSubset\u003cT, ProductFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$ProductPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderItemGroupByArgs, HasSelectOrTake extends Or\u003cExtends\u003c\"skip\", Keys\u003cT\u003e\u003e, Extends\u003c\"take\", Keys\u003cT\u003e\u003e\u003e, OrderByArg extends True extends HasSelectOrTake ? { orderBy: OrderItemGroupByArgs[\"orderBy\"]; } : { orderBy?: OrderItemGroupByArgs[\"orderBy\"]; }, OrderFields extends ExcludeUnderscoreKeys\u003cKeys\u003cMaybeTupleT...\u0027.",
                       "column":  32,
                       "line":  278,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(278,32): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderItemGroupByArgs, HasSelectOrTake extends Or\u003cExtends\u003c\"skip\", Keys\u003cT\u003e\u003e, Extends\u003c\"take\", Keys\u003cT\u003e\u003e\u003e, OrderByArg extends True extends HasSelectOrTake ? { orderBy: OrderItemGroupByArgs[\"orderBy\"]; } : { orderBy?: OrderItemGroupByArgs[\"orderBy\"]; }, OrderFields extends ExcludeUnderscoreKeys\u003cKeys\u003cMaybeTupleT...\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends ProductFindManyArgs\u003e(args?: SelectSubset\u003cT, ProductFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$ProductPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "column":  31,
                       "line":  279,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(279,31): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends ProductFindManyArgs\u003e(args?: SelectSubset\u003cT, ProductFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$ProductPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValueOnce\u0027 does not exist on type \u0027\u003cT extends CustomerCountArgs\u003e(args?: Subset\u003cT, CustomerCountArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cT extends Record_2\u003c\"select\", any\u003e ? T[\"select\"] extends true ? number : { [P in keyof T[\"select\"]]: P extends keyof CustomerCountAggregateOutputType ? CustomerCountAggregateOutputType[P] : never; } : number\u003e\u0027.",
                       "column":  29,
                       "line":  307,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(307,29): error TS2339: Property \u0027mockResolvedValueOnce\u0027 does not exist on type \u0027\u003cT extends CustomerCountArgs\u003e(args?: Subset\u003cT, CustomerCountArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cT extends Record_2\u003c\"select\", any\u003e ? T[\"select\"] extends true ? number : { [P in keyof T[\"select\"]]: P extends keyof CustomerCountAggregateOutputType ? CustomerCountAggregateOutputType[P] : never; } : number\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValueOnce\u0027 does not exist on type \u0027\u003cT extends CustomerCountArgs\u003e(args?: Subset\u003cT, CustomerCountArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cT extends Record_2\u003c\"select\", any\u003e ? T[\"select\"] extends true ? number : { [P in keyof T[\"select\"]]: P extends keyof CustomerCountAggregateOutputType ? CustomerCountAggregateOutputType[P] : never; } : number\u003e\u0027.",
                       "column":  29,
                       "line":  309,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(309,29): error TS2339: Property \u0027mockResolvedValueOnce\u0027 does not exist on type \u0027\u003cT extends CustomerCountArgs\u003e(args?: Subset\u003cT, CustomerCountArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cT extends Record_2\u003c\"select\", any\u003e ? T[\"select\"] extends true ? number : { [P in keyof T[\"select\"]]: P extends keyof CustomerCountAggregateOutputType ? CustomerCountAggregateOutputType[P] : never; } : number\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderGroupByArgs, HasSelectOrTake extends Or\u003cExtends\u003c\"skip\", Keys\u003cT\u003e\u003e, Extends\u003c\"take\", Keys\u003cT\u003e\u003e\u003e, OrderByArg extends True extends HasSelectOrTake ? { orderBy: OrderGroupByArgs[\"orderBy\"]; } : { orderBy?: OrderGroupByArgs[\"orderBy\"]; }, OrderFields extends ExcludeUnderscoreKeys\u003cKeys\u003cMaybeTupleToUnion\u003cT[\"or...\u0027.",
                       "column":  28,
                       "line":  311,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(311,28): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderGroupByArgs, HasSelectOrTake extends Or\u003cExtends\u003c\"skip\", Keys\u003cT\u003e\u003e, Extends\u003c\"take\", Keys\u003cT\u003e\u003e\u003e, OrderByArg extends True extends HasSelectOrTake ? { orderBy: OrderGroupByArgs[\"orderBy\"]; } : { orderBy?: OrderGroupByArgs[\"orderBy\"]; }, OrderFields extends ExcludeUnderscoreKeys\u003cKeys\u003cMaybeTupleToUnion\u003cT[\"or...\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValueOnce\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "column":  29,
                       "line":  313,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(313,29): error TS2339: Property \u0027mockResolvedValueOnce\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValueOnce\u0027 does not exist on type \u0027\u003cT extends CustomerCountArgs\u003e(args?: Subset\u003cT, CustomerCountArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cT extends Record_2\u003c\"select\", any\u003e ? T[\"select\"] extends true ? number : { [P in keyof T[\"select\"]]: P extends keyof CustomerCountAggregateOutputType ? CustomerCountAggregateOutputType[P] : never; } : number\u003e\u0027.",
                       "column":  29,
                       "line":  315,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(315,29): error TS2339: Property \u0027mockResolvedValueOnce\u0027 does not exist on type \u0027\u003cT extends CustomerCountArgs\u003e(args?: Subset\u003cT, CustomerCountArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cT extends Record_2\u003c\"select\", any\u003e ? T[\"select\"] extends true ? number : { [P in keyof T[\"select\"]]: P extends keyof CustomerCountAggregateOutputType ? CustomerCountAggregateOutputType[P] : never; } : number\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValueOnce\u0027 does not exist on type \u0027\u003cT extends CustomerCountArgs\u003e(args?: Subset\u003cT, CustomerCountArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cT extends Record_2\u003c\"select\", any\u003e ? T[\"select\"] extends true ? number : { [P in keyof T[\"select\"]]: P extends keyof CustomerCountAggregateOutputType ? CustomerCountAggregateOutputType[P] : never; } : number\u003e\u0027.",
                       "column":  29,
                       "line":  332,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(332,29): error TS2339: Property \u0027mockResolvedValueOnce\u0027 does not exist on type \u0027\u003cT extends CustomerCountArgs\u003e(args?: Subset\u003cT, CustomerCountArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cT extends Record_2\u003c\"select\", any\u003e ? T[\"select\"] extends true ? number : { [P in keyof T[\"select\"]]: P extends keyof CustomerCountAggregateOutputType ? CustomerCountAggregateOutputType[P] : never; } : number\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends CustomerFindManyArgs\u003e(args?: SelectSubset\u003cT, CustomerFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$CustomerPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "column":  32,
                       "line":  333,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(333,32): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends CustomerFindManyArgs\u003e(args?: SelectSubset\u003cT, CustomerFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$CustomerPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderGroupByArgs, HasSelectOrTake extends Or\u003cExtends\u003c\"skip\", Keys\u003cT\u003e\u003e, Extends\u003c\"take\", Keys\u003cT\u003e\u003e\u003e, OrderByArg extends True extends HasSelectOrTake ? { orderBy: OrderGroupByArgs[\"orderBy\"]; } : { orderBy?: OrderGroupByArgs[\"orderBy\"]; }, OrderFields extends ExcludeUnderscoreKeys\u003cKeys\u003cMaybeTupleToUnion\u003cT[\"or...\u0027.",
                       "column":  28,
                       "line":  334,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(334,28): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderGroupByArgs, HasSelectOrTake extends Or\u003cExtends\u003c\"skip\", Keys\u003cT\u003e\u003e, Extends\u003c\"take\", Keys\u003cT\u003e\u003e\u003e, OrderByArg extends True extends HasSelectOrTake ? { orderBy: OrderGroupByArgs[\"orderBy\"]; } : { orderBy?: OrderGroupByArgs[\"orderBy\"]; }, OrderFields extends ExcludeUnderscoreKeys\u003cKeys\u003cMaybeTupleToUnion\u003cT[\"or...\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValueOnce\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "column":  29,
                       "line":  335,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(335,29): error TS2339: Property \u0027mockResolvedValueOnce\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValueOnce\u0027 does not exist on type \u0027\u003cT extends CustomerCountArgs\u003e(args?: Subset\u003cT, CustomerCountArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cT extends Record_2\u003c\"select\", any\u003e ? T[\"select\"] extends true ? number : { [P in keyof T[\"select\"]]: P extends keyof CustomerCountAggregateOutputType ? CustomerCountAggregateOutputType[P] : never; } : number\u003e\u0027.",
                       "column":  29,
                       "line":  336,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(336,29): error TS2339: Property \u0027mockResolvedValueOnce\u0027 does not exist on type \u0027\u003cT extends CustomerCountArgs\u003e(args?: Subset\u003cT, CustomerCountArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cT extends Record_2\u003c\"select\", any\u003e ? T[\"select\"] extends true ? number : { [P in keyof T[\"select\"]]: P extends keyof CustomerCountAggregateOutputType ? CustomerCountAggregateOutputType[P] : never; } : number\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "column":  29,
                       "line":  355,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(355,29): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderItemGroupByArgs, HasSelectOrTake extends Or\u003cExtends\u003c\"skip\", Keys\u003cT\u003e\u003e, Extends\u003c\"take\", Keys\u003cT\u003e\u003e\u003e, OrderByArg extends True extends HasSelectOrTake ? { orderBy: OrderItemGroupByArgs[\"orderBy\"]; } : { orderBy?: OrderItemGroupByArgs[\"orderBy\"]; }, OrderFields extends ExcludeUnderscoreKeys\u003cKeys\u003cMaybeTupleT...\u0027.",
                       "column":  32,
                       "line":  359,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(359,32): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderItemGroupByArgs, HasSelectOrTake extends Or\u003cExtends\u003c\"skip\", Keys\u003cT\u003e\u003e, Extends\u003c\"take\", Keys\u003cT\u003e\u003e\u003e, OrderByArg extends True extends HasSelectOrTake ? { orderBy: OrderItemGroupByArgs[\"orderBy\"]; } : { orderBy?: OrderItemGroupByArgs[\"orderBy\"]; }, OrderFields extends ExcludeUnderscoreKeys\u003cKeys\u003cMaybeTupleT...\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends ProductFindManyArgs\u003e(args?: SelectSubset\u003cT, ProductFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$ProductPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "column":  31,
                       "line":  360,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(360,31): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends ProductFindManyArgs\u003e(args?: SelectSubset\u003cT, ProductFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$ProductPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends CustomerCountArgs\u003e(args?: Subset\u003cT, CustomerCountArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cT extends Record_2\u003c\"select\", any\u003e ? T[\"select\"] extends true ? number : { [P in keyof T[\"select\"]]: P extends keyof CustomerCountAggregateOutputType ? CustomerCountAggregateOutputType[P] : never; } : number\u003e\u0027.",
                       "column":  29,
                       "line":  362,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(362,29): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends CustomerCountArgs\u003e(args?: Subset\u003cT, CustomerCountArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cT extends Record_2\u003c\"select\", any\u003e ? T[\"select\"] extends true ? number : { [P in keyof T[\"select\"]]: P extends keyof CustomerCountAggregateOutputType ? CustomerCountAggregateOutputType[P] : never; } : number\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderGroupByArgs, HasSelectOrTake extends Or\u003cExtends\u003c\"skip\", Keys\u003cT\u003e\u003e, Extends\u003c\"take\", Keys\u003cT\u003e\u003e\u003e, OrderByArg extends True extends HasSelectOrTake ? { orderBy: OrderGroupByArgs[\"orderBy\"]; } : { orderBy?: OrderGroupByArgs[\"orderBy\"]; }, OrderFields extends ExcludeUnderscoreKeys\u003cKeys\u003cMaybeTupleToUnion\u003cT[\"or...\u0027.",
                       "column":  28,
                       "line":  363,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(363,28): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderGroupByArgs, HasSelectOrTake extends Or\u003cExtends\u003c\"skip\", Keys\u003cT\u003e\u003e, Extends\u003c\"take\", Keys\u003cT\u003e\u003e\u003e, OrderByArg extends True extends HasSelectOrTake ? { orderBy: OrderGroupByArgs[\"orderBy\"]; } : { orderBy?: OrderGroupByArgs[\"orderBy\"]; }, OrderFields extends ExcludeUnderscoreKeys\u003cKeys\u003cMaybeTupleToUnion\u003cT[\"or...\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "column":  29,
                       "line":  380,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(380,29): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "column":  29,
                       "line":  399,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(399,29): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockRejectedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "column":  29,
                       "line":  410,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(410,29): error TS2339: Property \u0027mockRejectedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "column":  29,
                       "line":  422,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(422,29): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "column":  29,
                       "line":  443,
                       "fullText":  "tests/unit/services/analytics-service.test.ts(443,29): error TS2339: Property \u0027mockResolvedValue\u0027 does not exist on type \u0027\u003cT extends OrderFindManyArgs\u003e(args?: SelectSubset\u003cT, OrderFindManyArgs\u003cDefaultArgs\u003e\u003e | undefined) =\u003e PrismaPromise\u003cGetFindResult\u003c$OrderPayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e[]\u003e\u0027.",
                       "code":  "TS2339",
                       "severity":  "error",
                       "file":  "tests/unit/services/analytics-service.test.ts"
                   },
                   {
                       "message":  "Cannot assign to \u0027NODE_ENV\u0027 because it is a read-only property.",
                       "column":  17,
                       "line":  36,
                       "fullText":  "tests/unit/services/email-service.test.ts(36,17): error TS2540: Cannot assign to \u0027NODE_ENV\u0027 because it is a read-only property.",
                       "code":  "TS2540",
                       "severity":  "error",
                       "file":  "tests/unit/services/email-service.test.ts"
                   },
                   {
                       "message":  "Cannot assign to \u0027NODE_ENV\u0027 because it is a read-only property.",
                       "column":  17,
                       "line":  108,
                       "fullText":  "tests/unit/services/email-service.test.ts(108,17): error TS2540: Cannot assign to \u0027NODE_ENV\u0027 because it is a read-only property.",
                       "code":  "TS2540",
                       "severity":  "error",
                       "file":  "tests/unit/services/email-service.test.ts"
                   },
                   {
                       "message":  "Cannot assign to \u0027NODE_ENV\u0027 because it is a read-only property.",
                       "column":  17,
                       "line":  200,
                       "fullText":  "tests/unit/services/email-service.test.ts(200,17): error TS2540: Cannot assign to \u0027NODE_ENV\u0027 because it is a read-only property.",
                       "code":  "TS2540",
                       "severity":  "error",
                       "file":  "tests/unit/services/email-service.test.ts"
                   },
                   {
                       "message":  "Cannot assign to \u0027NODE_ENV\u0027 because it is a read-only property.",
                       "column":  17,
                       "line":  268,
                       "fullText":  "tests/unit/services/email-service.test.ts(268,17): error TS2540: Cannot assign to \u0027NODE_ENV\u0027 because it is a read-only property.",
                       "code":  "TS2540",
                       "severity":  "error",
                       "file":  "tests/unit/services/email-service.test.ts"
                   },
                   {
                       "message":  "Cannot assign to \u0027NODE_ENV\u0027 because it is a read-only property.",
                       "column":  17,
                       "line":  381,
                       "fullText":  "tests/unit/services/email-service.test.ts(381,17): error TS2540: Cannot assign to \u0027NODE_ENV\u0027 because it is a read-only property.",
                       "code":  "TS2540",
                       "severity":  "error",
                       "file":  "tests/unit/services/email-service.test.ts"
                   },
                   {
                       "message":  "Cannot assign to \u0027NODE_ENV\u0027 because it is a read-only property.",
                       "column":  17,
                       "line":  476,
                       "fullText":  "tests/unit/services/email-service.test.ts(476,17): error TS2540: Cannot assign to \u0027NODE_ENV\u0027 because it is a read-only property.",
                       "code":  "TS2540",
                       "severity":  "error",
                       "file":  "tests/unit/services/email-service.test.ts"
                   },
                   {
                       "message":  "Type \u0027{ id: string; email: string; name: string; }\u0027 is missing the following properties from type \u0027{ name: string; password: string; id: string; email: string; phone: string | null; role: UserRole; storeId: string | null; mfaEnabled: boolean; mfaMethod: MFAMethod | null; ... 14 more ...; deletedAt: Date | null; }\u0027: password, phone, role, storeId, and 17 more.",
                       "column":  7,
                       "line":  499,
                       "fullText":  "tests/unit/services/email-service.test.ts(499,7): error TS2740: Type \u0027{ id: string; email: string; name: string; }\u0027 is missing the following properties from type \u0027{ name: string; password: string; id: string; email: string; phone: string | null; role: UserRole; storeId: string | null; mfaEnabled: boolean; mfaMethod: MFAMethod | null; ... 14 more ...; deletedAt: Date | null; }\u0027: password, phone, role, storeId, and 17 more.",
                       "code":  "TS2740",
                       "severity":  "error",
                       "file":  "tests/unit/services/email-service.test.ts"
                   },
                   {
                       "message":  "Type \u0027{ id: string; email: string; name: string; }\u0027 is missing the following properties from type \u0027{ name: string; password: string; id: string; email: string; phone: string | null; role: UserRole; storeId: string | null; mfaEnabled: boolean; mfaMethod: MFAMethod | null; ... 14 more ...; deletedAt: Date | null; }\u0027: password, phone, role, storeId, and 17 more.",
                       "column":  7,
                       "line":  519,
                       "fullText":  "tests/unit/services/email-service.test.ts(519,7): error TS2740: Type \u0027{ id: string; email: string; name: string; }\u0027 is missing the following properties from type \u0027{ name: string; password: string; id: string; email: string; phone: string | null; role: UserRole; storeId: string | null; mfaEnabled: boolean; mfaMethod: MFAMethod | null; ... 14 more ...; deletedAt: Date | null; }\u0027: password, phone, role, storeId, and 17 more.",
                       "code":  "TS2740",
                       "severity":  "error",
                       "file":  "tests/unit/services/email-service.test.ts"
                   },
                   {
                       "message":  "Type \u0027{ id: string; email: string; name: string; }\u0027 is missing the following properties from type \u0027{ name: string; password: string; id: string; email: string; phone: string | null; role: UserRole; storeId: string | null; mfaEnabled: boolean; mfaMethod: MFAMethod | null; ... 14 more ...; deletedAt: Date | null; }\u0027: password, phone, role, storeId, and 17 more.",
                       "column":  7,
                       "line":  535,
                       "fullText":  "tests/unit/services/email-service.test.ts(535,7): error TS2740: Type \u0027{ id: string; email: string; name: string; }\u0027 is missing the following properties from type \u0027{ name: string; password: string; id: string; email: string; phone: string | null; role: UserRole; storeId: string | null; mfaEnabled: boolean; mfaMethod: MFAMethod | null; ... 14 more ...; deletedAt: Date | null; }\u0027: password, phone, role, storeId, and 17 more.",
                       "code":  "TS2740",
                       "severity":  "error",
                       "file":  "tests/unit/services/email-service.test.ts"
                   },
                   {
                       "message":  "Cannot assign to \u0027NODE_ENV\u0027 because it is a read-only property.",
                       "column":  17,
                       "line":  550,
                       "fullText":  "tests/unit/services/email-service.test.ts(550,17): error TS2540: Cannot assign to \u0027NODE_ENV\u0027 because it is a read-only property.",
                       "code":  "TS2540",
                       "severity":  "error",
                       "file":  "tests/unit/services/email-service.test.ts"
                   },
                   {
                       "message":  "Type \u0027{ id: string; email: string; name: string; }\u0027 is missing the following properties from type \u0027{ name: string; password: string; id: string; email: string; phone: string | null; role: UserRole; storeId: string | null; mfaEnabled: boolean; mfaMethod: MFAMethod | null; ... 14 more ...; deletedAt: Date | null; }\u0027: password, phone, role, storeId, and 17 more.",
                       "column":  7,
                       "line":  573,
                       "fullText":  "tests/unit/services/email-service.test.ts(573,7): error TS2740: Type \u0027{ id: string; email: string; name: string; }\u0027 is missing the following properties from type \u0027{ name: string; password: string; id: string; email: string; phone: string | null; role: UserRole; storeId: string | null; mfaEnabled: boolean; mfaMethod: MFAMethod | null; ... 14 more ...; deletedAt: Date | null; }\u0027: password, phone, role, storeId, and 17 more.",
                       "code":  "TS2740",
                       "severity":  "error",
                       "file":  "tests/unit/services/email-service.test.ts"
                   },
                   {
                       "message":  "Type \u0027{ id: string; email: string; name: string; }\u0027 is missing the following properties from type \u0027{ name: string; password: string; id: string; email: string; phone: string | null; role: UserRole; storeId: string | null; mfaEnabled: boolean; mfaMethod: MFAMethod | null; ... 14 more ...; deletedAt: Date | null; }\u0027: password, phone, role, storeId, and 17 more.",
                       "column":  7,
                       "line":  593,
                       "fullText":  "tests/unit/services/email-service.test.ts(593,7): error TS2740: Type \u0027{ id: string; email: string; name: string; }\u0027 is missing the following properties from type \u0027{ name: string; password: string; id: string; email: string; phone: string | null; role: UserRole; storeId: string | null; mfaEnabled: boolean; mfaMethod: MFAMethod | null; ... 14 more ...; deletedAt: Date | null; }\u0027: password, phone, role, storeId, and 17 more.",
                       "code":  "TS2740",
                       "severity":  "error",
                       "file":  "tests/unit/services/email-service.test.ts"
                   },
                   {
                       "message":  "Type \u0027{ id: string; name: string; email: string; }\u0027 is missing the following properties from type \u0027{ name: string; locale: string; id: string; email: string; phone: string | null; createdAt: Date; updatedAt: Date; deletedAt: Date | null; slug: string; description: string | null; ... 14 more ...; timezone: string; }\u0027: locale, phone, createdAt, updatedAt, and 18 more.",
                       "column":  7,
                       "line":  596,
                       "fullText":  "tests/unit/services/email-service.test.ts(596,7): error TS2740: Type \u0027{ id: string; name: string; email: string; }\u0027 is missing the following properties from type \u0027{ name: string; locale: string; id: string; email: string; phone: string | null; createdAt: Date; updatedAt: Date; deletedAt: Date | null; slug: string; description: string | null; ... 14 more ...; timezone: string; }\u0027: locale, phone, createdAt, updatedAt, and 18 more.",
                       "code":  "TS2740",
                       "severity":  "error",
                       "file":  "tests/unit/services/email-service.test.ts"
                   },
                   {
                       "message":  "Type \u0027{ id: string; email: string; name: string; }\u0027 is missing the following properties from type \u0027{ name: string; password: string; id: string; email: string; phone: string | null; role: UserRole; storeId: string | null; mfaEnabled: boolean; mfaMethod: MFAMethod | null; ... 14 more ...; deletedAt: Date | null; }\u0027: password, phone, role, storeId, and 17 more.",
                       "column":  7,
                       "line":  609,
                       "fullText":  "tests/unit/services/email-service.test.ts(609,7): error TS2740: Type \u0027{ id: string; email: string; name: string; }\u0027 is missing the following properties from type \u0027{ name: string; password: string; id: string; email: string; phone: string | null; role: UserRole; storeId: string | null; mfaEnabled: boolean; mfaMethod: MFAMethod | null; ... 14 more ...; deletedAt: Date | null; }\u0027: password, phone, role, storeId, and 17 more.",
                       "code":  "TS2740",
                       "severity":  "error",
                       "file":  "tests/unit/services/email-service.test.ts"
                   },
                   {
                       "fullText":  "tests/unit/services/subscription-service.test.ts(26,16): error TS2352: Conversion of type \u0027PrismaClient\u003cPrismaClientOptions, never, DefaultArgs\u003e\u0027 to type \u0027{ store: { findUnique: MockedFunction\u003cany\u003e; update: MockedFunction\u003cany\u003e; findMany: MockedFunction\u003cany\u003e; }; product: { count: MockedFunction\u003cany\u003e; }; order: { ...; }; }\u0027 may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to \u0027unknown\u0027 first.",
                       "file":  "tests/unit/services/subscription-service.test.ts",
                       "code":  "TS2352",
                       "line":  26,
                       "severity":  "error",
                       "message":  "Conversion of type \u0027PrismaClient\u003cPrismaClientOptions, never, DefaultArgs\u003e\u0027 to type \u0027{ store: { findUnique: MockedFunction\u003cany\u003e; update: MockedFunction\u003cany\u003e; findMany: MockedFunction\u003cany\u003e; }; product: { count: MockedFunction\u003cany\u003e; }; order: { ...; }; }\u0027 may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to \u0027unknown\u0027 first. The types of \u0027store.findUnique\u0027 are incompatible between these types. Type \u0027\u003cT extends StoreFindUniqueArgs\u003e(args: SelectSubset\u003cT, StoreFindUniqueArgs\u003cDefaultArgs\u003e\u003e) =\u003e Prisma__StoreClient\u003cGetFindResult\u003c$StorePayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e | null, null, DefaultArgs, PrismaClientOptions\u003e\u0027 is not comparable to type \u0027MockedFunction\u003cany\u003e\u0027. Type \u0027\u003cT extends StoreFindUniqueArgs\u003e(args: SelectSubset\u003cT, StoreFindUniqueArgs\u003cDefaultArgs\u003e\u003e) =\u003e Prisma__StoreClient\u003cGetFindResult\u003c$StorePayload\u003cDefaultArgs\u003e, T, PrismaClientOptions\u003e | null, null, DefaultArgs, PrismaClientOptions\u003e\u0027 is missing the following properties from type \u0027Mock\u003cany\u003e\u0027: getMockName, mockName, mock, mockClear, and 14 more.",
                       "column":  16
                   }
               ]
}
